[
    {
        "steps": [
            {
                "step": 0,
                "x": "1 1 11 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 1 = 2 (left: 2 11 11)\n",
                    "1 * 1 = 1 (left: 1 11 11)\n",
                    "11 - 1 = 10 (left: 1 10 11)\n",
                    "11 - 1 = 10 (left: 1 11 10)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n",
                    "11 - 1 = 10 (left: 1 10 11)\n",
                    "11 - 1 = 10 (left: 1 11 10)\n",
                    "1 * 1 = 1 (left: 1 11 11)\n"
                ],
                "values": [
                    0.003,
                    1.002,
                    0.003,
                    0.003,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 * 1 = 1 (left: 1 11 11)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n",
                    "11 - 1 = 10 (left: 1 10 11)\n",
                    "11 - 1 = 10 (left: 1 11 10)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 1 11 11",
                "ys": [
                    "1 * 1 = 1 (left: 1 11 11)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n",
                    "11 - 1 = 10 (left: 1 10 11)\n",
                    "11 - 1 = 10 (left: 1 11 10)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n"
                ],
                "new_ys": [
                    "1 * 1 = 1 (left: 1 11 11)\n1 + 11 = 12 (left: 11 12)\n",
                    "1 * 1 = 1 (left: 1 11 11)\n11 / 1 = 11 (left: 11 11)\n",
                    "1 * 1 = 1 (left: 1 11 11)\n11 - 1 = 10 (left: 10 11)\n",
                    "1 * 1 = 1 (left: 1 11 11)\n1 * 11 = 11 (left: 11 11)\n",
                    "1 * 1 = 1 (left: 1 11 11)\n11 - 11 = 0 (left: 1)\n",
                    "1 * 1 = 1 (left: 1 11 11)\n11 + 1 = 12 (left: 11 12)\n",
                    "1 * 1 = 1 (left: 1 11 11)\n1 / 11 = 0.09090909090909091 (left: 0.09090909090909091 11)\n",
                    "1 * 1 = 1 (left: 1 11 11)\n11 * 1 = 11 (left: 11 11)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n11 - 2 = 9 (left: 9 11)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n11 / 2 = 5.5 (left: 5.5 11)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n11 - 2 = 9 (left: 9 11)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n2 * 11 = 22 (left: 11 22)\n",
                    "1 + 1 = 2 (left: 2 11 11)\nInput: 5 9 9\n",
                    "1 + 1 = 2 (left: 2 11 11)\nPossible next steps:\n",
                    "1 + 1 = 2 (left: 2 11 11)\n5 + 9 = 14 (left: 9 14)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n9 - 5 = 4 (left: 4 9)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n9 / 5 = 1.8 (left: 1.8 9)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n9 - 5 = 4 (left: 4 9)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n9 * 5 = 45 (left: 9 45)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n5 * 9 = 45 (left: 9 45)\n",
                    "11 - 1 = 10 (left: 1 10 11)\n1 + 10 = 11 (left: 11 11)\n",
                    "11 - 1 = 10 (left: 1 10 11)\n10 - 1 = 9 (left: 9 11)\n",
                    "11 - 1 = 10 (left: 1 10 11)\n11 - 1 = 10 (left: 10 11)\n",
                    "11 - 1 = 10 (left: 1 10 11)\n1 * 10 = 10 (left: 10 11)\n",
                    "11 - 1 = 10 (left: 1 10 11)\n10 / 1 = 10 (left: 10 11)\n",
                    "11 - 1 = 10 (left: 1 10 11)\n11 / 1 = 11 (left: 1 11)\n",
                    "11 - 1 = 10 (left: 1 10 11)\nInput: 3 9 27\n",
                    "11 - 1 = 10 (left: 1 10 11)\nPossible next steps:\n",
                    "11 - 1 = 10 (left: 1 10 11)\n3 * 9 = 27 (left: 27 27)\n",
                    "11 - 1 = 10 (left: 1 10 11)\n9 * 3 = 27 (left: 27 27)\n",
                    "11 - 1 = 10 (left: 1 10 11)\n27 / 3 = 9 (left: 9 27)\n",
                    "11 - 1 = 10 (left: 1 10 11)\n27 / 9 = 3 (left: 3 27)\n",
                    "11 - 1 = 10 (left: 1 10 11)\n27 - 3 = 24 (left: 9 24)\n",
                    "11 - 1 = 10 (left: 1 10 11)\n9 * 3 = 27 (left: 27 27)\n",
                    "11 - 1 = 10 (left: 1 10 11)\n9 / 3 = 3 (left: 3 27)\n",
                    "11 - 1 = 10 (left: 1 10 11)\n27 - 9 = 18 (left: 3 18)\n",
                    "11 - 1 = 10 (left: 1 10 11)\nInput: 5 5 25\n",
                    "11 - 1 = 10 (left: 1 10 11)\nPossible next steps:\n",
                    "11 - 1 = 10 (left: 1 10 11)\n5 * 5 = 25 (left: 25)\n",
                    "11 - 1 = 10 (left: 1 10 11)\n5 + 5 = 10 (left: 10 25)\n",
                    "11 - 1 = 10 (left: 1 10 11)\n5 - 5 = 0 (left: 0 25)\n",
                    "11 - 1 = 10 (left: 1 10 11)\n25 / 5 = 5 (left: 5 25)\n",
                    "11 - 1 = 10 (left: 1 10 11)\n25 / 5 = 5 (left: 5 25)\n",
                    "11 - 1 = 10 (left: 1 11 10)\n1 + 11 = 12 (left: 10 12)\n",
                    "11 - 1 = 10 (left: 1 11 10)\n11 - 1 = 10 (left: 10 10)\n",
                    "11 - 1 = 10 (left: 1 11 10)\n1 * 11 = 11 (left: 11 10)\n",
                    "11 - 1 = 10 (left: 1 11 10)\n11 / 1 = 11 (left: 11 10)\n",
                    "11 - 1 = 10 (left: 1 11 10)\n11 - 10 = 1 (left: 1 10)\n",
                    "11 - 1 = 10 (left: 1 11 10)\n11 / 10 = 1.1 (left: 1.1 10)\n",
                    "11 - 1 = 10 (left: 1 11 10)\n10 - 1 = 9 (left: 9 10)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n11 - 2 = 9 (left: 9 11)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n11 / 2 = 5.5 (left: 5.5 11)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n",
                    "1 + 1 = 2 (left: 2 11 11)\nInput: 5 5 10\n",
                    "1 + 1 = 2 (left: 2 11 11)\nPossible next steps:\n",
                    "1 + 1 = 2 (left: 2 11 11)\n5 + 5 = 10 (left: 10 10)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n5 * 5 = 25 (left: 10 25)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n5 / 5 = 1 (left: 1 10)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n10 - 5 = 5 (left: 5 10)\n",
                    "1 + 1 = 2 (left: 2 11 11)\nInput: 3 3 9\n",
                    "1 + 1 = 2 (left: 2 11 11)\nPossible next steps:\n",
                    "1 + 1 = 2 (left: 2 11 11)\n3 + 3 = 6 (left: 6 9)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n3 * 3 = 9 (left: 9 9)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n3 / 3 = 1 (left: 1 9)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n9 - 3 = 6 (left: 6 9)\n"
                ],
                "values": [
                    0.003,
                    0.003,
                    0.003,
                    0.003,
                    0.003,
                    0.003,
                    2.0,
                    0.003,
                    60.0,
                    1.0,
                    1.002,
                    0,
                    20.002,
                    20.002,
                    0.003,
                    0.003,
                    1.001,
                    40.001,
                    0.003,
                    0,
                    20.001,
                    20.001,
                    0.003,
                    1.0,
                    0.003,
                    0.003,
                    0.003,
                    1.0,
                    0.002,
                    0.003,
                    0.003,
                    0.003,
                    20.001,
                    20.002,
                    0.003,
                    0,
                    20.002,
                    0.003,
                    0.003,
                    0,
                    0.001,
                    0.003,
                    21.0,
                    0.002,
                    0,
                    0.003,
                    0.003,
                    0.002,
                    0.002,
                    60.0,
                    20.001,
                    0.002,
                    0,
                    0,
                    0,
                    0,
                    0.003,
                    0,
                    0.003,
                    0.003,
                    60.0,
                    0.001,
                    0.003,
                    0,
                    0.003,
                    1.002,
                    60.0,
                    0.003
                ],
                "select_new_ys": [
                    "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n",
                    "11 - 1 = 10 (left: 1 11 10)\n11 - 10 = 1 (left: 1 10)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n5 / 5 = 1 (left: 1 10)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n3 / 3 = 1 (left: 1 9)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n9 - 5 = 4 (left: 4 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 1 11 11",
                "ys": [
                    "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n",
                    "11 - 1 = 10 (left: 1 11 10)\n11 - 10 = 1 (left: 1 10)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n5 / 5 = 1 (left: 1 10)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n3 / 3 = 1 (left: 1 9)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n9 - 5 = 4 (left: 4 9)\n"
                ],
                "new_ys": [
                    "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 - 13 = -2 (left: -2)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 * 13 = 143 (left: 143)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 / 13 \u2248 0.846 (left: 0.846)\n",
                    "11 - 1 = 10 (left: 1 11 10)\n11 - 10 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10)\n",
                    "11 - 1 = 10 (left: 1 11 10)\n11 - 10 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "11 - 1 = 10 (left: 1 11 10)\n11 - 10 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9)\n",
                    "11 - 1 = 10 (left: 1 11 10)\n11 - 10 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "11 - 1 = 10 (left: 1 11 10)\n11 - 10 = 1 (left: 1 10)\n10 - 10 = 0 (left: 0)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n5 / 5 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n5 / 5 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n5 / 5 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n5 / 5 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n3 / 3 = 1 (left: 1 9)\n1 + 9 = 10 (left: 9 10)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n3 / 3 = 1 (left: 1 9)\n9 - 1 = 8 (left: 8 9)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n3 / 3 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9 9)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n3 / 3 = 1 (left: 1 9)\n9 / 1 = 9 (left: 1 9)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n3 / 3 = 1 (left: 1 9)\n1 - 9 = -8 (left: -8 9)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n3 / 3 = 1 (left: 1 9)\n9 + 1 = 10 (left: 1 10)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n9 - 5 = 4 (left: 4 9)\n4 + 9 = 13 (left: 9 13)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n9 - 5 = 4 (left: 4 9)\n9 - 4 = 5 (left: 5 9)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 9 36)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n9 - 5 = 4 (left: 4 9)\n9 / 4 = 2.25 (left: 2.25 9)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n9 - 5 = 4 (left: 4 9)\nInput: 3 6 6\n",
                    "1 + 1 = 2 (left: 2 11 11)\n9 - 5 = 4 (left: 4 9)\nPossible next steps:\n",
                    "1 + 1 = 2 (left: 2 11 11)\n9 - 5 = 4 (left: 4 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n9 - 5 = 4 (left: 4 9)\n6 / 3 = 2 (left: 2 6)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n9 - 5 = 4 (left: 4 9)\n6 * 3 = 18 (left: 6 18)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n9 - 5 = 4 (left: 4 9)\n6 - 3 = 3 (left: 3 6)\n"
                ],
                "values": [
                    60.0,
                    0.002,
                    0.003,
                    0.003,
                    0.003,
                    0.003,
                    0.002,
                    0.003,
                    0.003,
                    0.002,
                    0.002,
                    0.003,
                    0.003,
                    0.002,
                    0.003,
                    1.002,
                    60.0,
                    0.001,
                    60.0,
                    0.002,
                    0.003,
                    20.001,
                    1.001,
                    0.003,
                    0.003,
                    0.003,
                    0.002,
                    0.003,
                    3.0
                ],
                "select_new_ys": [
                    "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n3 / 3 = 1 (left: 1 9)\n9 / 1 = 9 (left: 1 9)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n3 / 3 = 1 (left: 1 9)\n9 + 1 = 10 (left: 1 10)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 9 36)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n9 - 5 = 4 (left: 4 9)\n6 - 3 = 3 (left: 3 6)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 1 11 11",
                "ys": [
                    "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n3 / 3 = 1 (left: 1 9)\n9 / 1 = 9 (left: 1 9)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n3 / 3 = 1 (left: 1 9)\n9 + 1 = 10 (left: 1 10)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 9 36)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n9 - 5 = 4 (left: 4 9)\n6 - 3 = 3 (left: 3 6)\n"
                ],
                "new_ys": [
                    "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((1 + 1) + 11) + 11 = 24\n",
                    "1 + 1 = 2 (left: 2 11 11)\n3 / 3 = 1 (left: 1 9)\n9 / 1 = 9 (left: 1 9)\n1 + 9 = 10 (left: 10)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n3 / 3 = 1 (left: 1 9)\n9 / 1 = 9 (left: 1 9)\n9 / 1 = 9 (left: 9)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n3 / 3 = 1 (left: 1 9)\n9 / 1 = 9 (left: 1 9)\n1 * 9 = 9 (left: 9)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n3 / 3 = 1 (left: 1 9)\n9 / 1 = 9 (left: 1 9)\n9 - 1 = 8 (left: 8)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n3 / 3 = 1 (left: 1 9)\n9 + 1 = 10 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n3 / 3 = 1 (left: 1 9)\n9 + 1 = 10 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n3 / 3 = 1 (left: 1 9)\n9 + 1 = 10 (left: 1 10)\n10 - 1 = 9 (left: 9)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n3 / 3 = 1 (left: 1 9)\n9 + 1 = 10 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 9 36)\n9 * 4 = 36 (left: 36)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 9 36)\n36 / 9 = 4 (left: 4)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 9 36)\n9 + 36 = 45 (left: 45)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 9 36)\n36 - 9 = 27 (left: 27)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n9 - 5 = 4 (left: 4 9)\n6 - 3 = 3 (left: 3 6)\n3 + 6 = 9 (left: 9)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n9 - 5 = 4 (left: 4 9)\n6 - 3 = 3 (left: 3 6)\n6 / 3 = 2 (left: 2)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n9 - 5 = 4 (left: 4 9)\n6 - 3 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n9 - 5 = 4 (left: 4 9)\n6 - 3 = 3 (left: 3 6)\n6 - 3 = 3 (left: 3)\n"
                ],
                "values": [
                    60.0,
                    0.003,
                    0.002,
                    0.002,
                    0,
                    0.002,
                    0.003,
                    0.002,
                    0.003,
                    0,
                    0,
                    0,
                    0,
                    0.002,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((1 + 1) + 11) + 11 = 24\n",
                    "1 + 1 = 2 (left: 2 11 11)\n3 / 3 = 1 (left: 1 9)\n9 / 1 = 9 (left: 1 9)\n1 + 9 = 10 (left: 10)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n3 / 3 = 1 (left: 1 9)\n9 + 1 = 10 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n3 / 3 = 1 (left: 1 9)\n9 + 1 = 10 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "1 + 1 = 2 (left: 2 11 11)\n3 / 3 = 1 (left: 1 9)\n9 / 1 = 9 (left: 1 9)\n9 / 1 = 9 (left: 9)\n"
                ]
            }
        ],
        "idx": 1,
        "ys": [
            "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((1 + 1) + 11) + 11 = 24\n",
            "1 + 1 = 2 (left: 2 11 11)\n3 / 3 = 1 (left: 1 9)\n9 / 1 = 9 (left: 1 9)\n1 + 9 = 10 (left: 10)\n",
            "1 + 1 = 2 (left: 2 11 11)\n3 / 3 = 1 (left: 1 9)\n9 + 1 = 10 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
            "1 + 1 = 2 (left: 2 11 11)\n3 / 3 = 1 (left: 1 9)\n9 + 1 = 10 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
            "1 + 1 = 2 (left: 2 11 11)\n3 / 3 = 1 (left: 1 9)\n9 / 1 = 9 (left: 1 9)\n9 / 1 = 9 (left: 9)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 4682,
            "prompt_tokens": 28056,
            "cost": 0.05144800000000001
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 1 3 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 1 = 2 (left: 2 3 8)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n",
                    "3 - 1 = 2 (left: 1 2 8)\n",
                    "8 - 3 = 5 (left: 1 1 5)\n",
                    "1 + 3 = 4 (left: 4 1 8)\n",
                    "3 * 1 = 3 (left: 1 3 8)\n",
                    "8 - 1 = 7 (left: 1 3 7)\n",
                    "8 / 3 = 2 (left: 1 1 2)\n"
                ],
                "values": [
                    0.003,
                    60.0,
                    60.0,
                    0.003,
                    1.002,
                    60.0,
                    3.0,
                    20.002
                ],
                "select_new_ys": [
                    "1 * 1 = 1 (left: 1 3 8)\n",
                    "3 - 1 = 2 (left: 1 2 8)\n",
                    "3 * 1 = 3 (left: 1 3 8)\n",
                    "8 / 3 = 2 (left: 1 1 2)\n",
                    "8 - 1 = 7 (left: 1 3 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 1 3 8",
                "ys": [
                    "1 * 1 = 1 (left: 1 3 8)\n",
                    "3 - 1 = 2 (left: 1 2 8)\n",
                    "3 * 1 = 3 (left: 1 3 8)\n",
                    "8 / 3 = 2 (left: 1 1 2)\n",
                    "8 - 1 = 7 (left: 1 3 7)\n"
                ],
                "new_ys": [
                    "1 * 1 = 1 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 - 1 = 7 (left: 7 8)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 + 1 = 4 (left: 4 8)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 3 = 2.67 (left: 1 2.67)\n",
                    "3 - 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n",
                    "3 - 1 = 2 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)\n",
                    "3 - 1 = 2 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n",
                    "3 - 1 = 2 (left: 1 2 8)\n2 + 8 = 10 (left: 1 10)\n",
                    "3 - 1 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n",
                    "3 - 1 = 2 (left: 1 2 8)\n1 * 2 = 2 (left: 2 8)\n",
                    "3 - 1 = 2 (left: 1 2 8)\n8 - 1 = 7 (left: 2 7)\n",
                    "3 - 1 = 2 (left: 1 2 8)\n1 + 8 = 9 (left: 9)\n",
                    "3 * 1 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n",
                    "3 * 1 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n",
                    "3 * 1 = 3 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)\n",
                    "3 * 1 = 3 (left: 1 3 8)\n3 - 1 =  2 (left: 2 8)\n",
                    "3 * 1 = 3 (left: 1 3 8)\n8 / 3 = 2.67 (left: 1 2.67)\n",
                    "3 * 1 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n",
                    "3 * 1 = 3 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n",
                    "3 * 1 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)\n",
                    "3 * 1 = 3 (left: 1 3 8)\nInput: 5 12 2\n",
                    "3 * 1 = 3 (left: 1 3 8)\nPossible next steps:\n",
                    "3 * 1 = 3 (left: 1 3 8)\n5 + 12 = 17 (left: 17 2)\n",
                    "3 * 1 = 3 (left: 1 3 8)\n12 / 2 = 6 (left: 5 6)\n",
                    "3 * 1 = 3 (left: 1 3 8)\n2 * 5 = 10 (left: 10 12)\n",
                    "3 * 1 = 3 (left: 1 3 8)\n12 - 5 = 7 (left: 7 2)\n",
                    "3 * 1 = 3 (left: 1 3 8)\n5 - 2 = 3 (left: 3 12)\n",
                    "3 * 1 = 3 (left: 1 3 8)\n12 - 2 = 10 (left: 5 10)\n",
                    "3 * 1 = 3 (left: 1 3 8)\n2 + 5 = 7 (left: 7 12)\n",
                    "3 * 1 = 3 (left: 1 3 8)\n12 / 5 = 2.4 (left: 2.4 2)\n",
                    "8 / 3 = 2 (left: 1 1 2)\n1 + 1 = 2 (left: 2 2)\n",
                    "8 / 3 = 2 (left: 1 1 2)\n1 * 1 = 1 (left: 1 2)\n",
                    "8 / 3 = 2 (left: 1 1 2)\n2 * 1 = 2 (left: 1 2)\n",
                    "8 / 3 = 2 (left: 1 1 2)\n2 - 1 = 1 (left: 1 1)\n",
                    "8 / 3 = 2 (left: 1 1 2)\n1 / 1 = 1 (left: 1 2)\n",
                    "8 / 3 = 2 (left: 1 1 2)\nInput: 3 5 7\n",
                    "8 / 3 = 2 (left: 1 1 2)\nPossible next steps:\n",
                    "8 / 3 = 2 (left: 1 1 2)\n3 + 5 = 8 (left: 8 7)\n",
                    "8 / 3 = 2 (left: 1 1 2)\n5 - 3 = 2 (left: 2 7)\n",
                    "8 / 3 = 2 (left: 1 1 2)\n7 - 5 = 2 (left: 2 7)\n",
                    "8 / 3 = 2 (left: 1 1 2)\n3 * 5 = 15 (left: 15 7)\n",
                    "8 / 3 = 2 (left: 1 1 2)\n5 / 3 = 1.6666666666666667 (left: 1.6666666666666667 7)\n",
                    "8 / 3 = 2 (left: 1 1 2)\n7 - 3 = 4 (left: 4 7)\n",
                    "8 / 3 = 2 (left: 1 1 2)\n7 / 3 = 2.3333333333333335 (left: 2.3333333333333335 7)\n",
                    "8 / 3 = 2 (left: 1 1 2)\nInput: 4 9 3\n",
                    "8 / 3 = 2 (left: 1 1 2)\nPossible next steps:\n",
                    "8 / 3 = 2 (left: 1 1 2)\n4 + 9 = 13 (left: 13 3)\n",
                    "8 / 3 = 2 (left: 1 1 2)\n9 - 4 = 5 (left: 5 3)\n",
                    "8 / 3 = 2 (left: 1 1 2)\n3 - 4 = -1 (left: -1 3)\n",
                    "8 / 3 = 2 (left: 1 1 2)\n4 * 9 = 36 (left: 36 3)\n",
                    "8 / 3 = 2 (left: 1 1 2)\n9 / 4 = 2.25 (left: 2.25 3)\n",
                    "8 / 3 = 2 (left: 1 1 2)\n3 * 4 = 12 (left: 12 3)\n",
                    "8 / 3 = 2 (left: 1 1 2)\n9 - 3 = 6 (left: 4 6)\n",
                    "8 / 3 = 2 (left: 1 1 2)\n9 / 3 = 3 (left: 4 3)\n",
                    "8 - 1 = 7 (left: 1 3 7)\n1 + 3 = 4 (left: 4 7)\n",
                    "8 - 1 = 7 (left: 1 3 7)\n3 * 7 = 21 (left: 1 21)\n",
                    "8 - 1 = 7 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n",
                    "8 - 1 = 7 (left: 1 3 7)\n3 - 1 = 2 (left: 2 7)\n",
                    "8 - 1 = 7 (left: 1 3 7)\n7 - 1 = 6 (left: 3 6)\n",
                    "8 - 1 = 7 (left: 1 3 7)\n1 * 7 = 7 (left: 3 7)\n",
                    "8 - 1 = 7 (left: 1 3 7)\n7 / 3 = 2 (left: 1 2)\n",
                    "8 - 1 = 7 (left: 1 3 7)\nInput: 5 10 15\n",
                    "8 - 1 = 7 (left: 1 3 7)\nPossible next steps:\n",
                    "8 - 1 = 7 (left: 1 3 7)\n5 + 10 = 15 (left: 15)\n",
                    "8 - 1 = 7 (left: 1 3 7)\n10 - 5 = 5 (left: 5 15)\n",
                    "8 - 1 = 7 (left: 1 3 7)\n15 / 5 = 3 (left: 3 15)\n",
                    "8 - 1 = 7 (left: 1 3 7)\n15 - 10 = 5 (left: 5 5)\n",
                    "8 - 1 = 7 (left: 1 3 7)\n10 * 15 = 150 (left: 5 150)\n",
                    "8 - 1 = 7 (left: 1 3 7)\n15 + 5 = 20 (left: 10 20)\n",
                    "8 - 1 = 7 (left: 1 3 7)\n5 * 10 = 50 (left: 15 50)\n",
                    "8 - 1 = 7 (left: 1 3 7)\n15 - 5 = 10 (left: 10 10)\n",
                    "8 - 1 = 7 (left: 1 3 7)\nInput: 4 9 13\n",
                    "8 - 1 = 7 (left: 1 3 7)\nPossible next steps:\n",
                    "8 - 1 = 7 (left: 1 3 7)\n4 + 9 = 13 (left: 13)\n",
                    "8 - 1 = 7 (left: 1 3 7)\n9 - 4 = 5 (left: 5 13)\n",
                    "8 - 1 = 7 (left: 1 3 7)\n13 / 4 = 3 (left: 3 13)\n",
                    "8 - 1 = 7 (left: 1 3 7)\n13 - 9 = 4 (left: 4 13)\n",
                    "8 - 1 = 7 (left: 1 3 7)\n9 * 13 = 117 (left: 4 117)\n",
                    "8 - 1 = 7 (left: 1 3 7)\n13 + 4 = 17 (left: 9 17)\n",
                    "8 - 1 = 7 (left: 1 3 7)\n4 * 9 = 36 (left: 13 36)\n",
                    "8 - 1 = 7 (left: 1 3 7)\n13 - 4 = 9 (left: 9 9)\n"
                ],
                "values": [
                    0.003,
                    60.0,
                    20.002,
                    60.0,
                    0.003,
                    60.0,
                    0.0,
                    60.0,
                    0.001,
                    60.0,
                    60.0,
                    41.0,
                    0.002,
                    0.001,
                    0.002,
                    0.003,
                    60.0,
                    60.0,
                    0.002,
                    0.0,
                    60.0,
                    0.0,
                    60.0,
                    0.003,
                    0.003,
                    0.002,
                    1.0,
                    0.003,
                    1.001,
                    0.003,
                    0.001,
                    0.002,
                    3.0,
                    22.0,
                    0.002,
                    0.002,
                    0.002,
                    0.002,
                    0.003,
                    0.003,
                    0.003,
                    0.001,
                    0.001,
                    0.002,
                    1.002,
                    0.003,
                    2.001,
                    0.003,
                    0,
                    20.002,
                    20.0,
                    2.001,
                    41.0,
                    0.002,
                    21.001,
                    41.0,
                    21.0,
                    0.003,
                    0.001,
                    41.0,
                    0.001,
                    3.0,
                    0.0,
                    0.002,
                    0.003,
                    0.003,
                    0.002,
                    0.003,
                    0.003,
                    0.002,
                    2.0,
                    0.003,
                    0.0,
                    0.003,
                    0.003,
                    0,
                    0.002,
                    0.003,
                    0.002,
                    0.003,
                    60.0,
                    0.003,
                    0.003,
                    1.002
                ],
                "select_new_ys": [
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)\n",
                    "3 - 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n",
                    "3 - 1 = 2 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 1 3 8",
                "ys": [
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)\n",
                    "3 - 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n",
                    "3 - 1 = 2 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n"
                ],
                "new_ys": [
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\nInput: 4 10\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\nPossible next steps:\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n4 + 10 = 14 (left: 10 14)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n10 / 4 = 2.5 (left: 2.5 10)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n4 * 10 = 40 (left: 10 40)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n10 - 4 = 6 (left: 6 10)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)\n1 + 5 = 6 (left: 6)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)\n5 - 1 = 4 (left: 4)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)\n1 * 5 = 5 (left: 5)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)\n5 / 1 = 5 (left: 5)\n",
                    "3 - 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "3 - 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)\n",
                    "3 - 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "3 - 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "3 - 1 = 2 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n1 + 6 = 7\n"
                ],
                "values": [
                    0.002,
                    2.001,
                    21.0,
                    0.003,
                    0.002,
                    2.001,
                    21.0,
                    0.003,
                    0.003,
                    0.003,
                    60.0,
                    0.002,
                    1.002,
                    0.001,
                    0.003,
                    0,
                    0.002,
                    0.002,
                    0.002,
                    0.002,
                    60.0,
                    0.002,
                    0.003
                ],
                "select_new_ys": [
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n4 + 10 = 14 (left: 10 14)\n",
                    "3 - 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 1 3 8",
                "ys": [
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n4 + 10 = 14 (left: 10 14)\n",
                    "3 - 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)\n"
                ],
                "new_ys": [
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n4 + 10 = 14 (left: 10 14)\n10 + 14 = 24 (left: 14 24)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n4 + 10 = 14 (left: 10 14)\n10 * 14 = 140 (left: 140)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n4 + 10 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4 14)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n4 + 10 = 14 (left: 10 14)\n14 / 10 = 1.4 (left: 1.4 14)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n4 + 10 = 14 (left: 10 14)\nInput: 14 24\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n4 + 10 = 14 (left: 10 14)\nPossible next steps:\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n4 + 10 = 14 (left: 10 14)\n14 + 24 = 38 (left: 38)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n4 + 10 = 14 (left: 10 14)\n14 * 24 = 336 (left: 336)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n4 + 10 = 14 (left: 10 14)\n24 - 14 = 10 (left: 10 24)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n4 + 10 = 14 (left: 10 14)\n24 / 14 = 1.71 (left: 1.71 24)\n",
                    "3 - 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * (1 + 1)) * 8 = 24\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n8 * 3 = 24 (left: 24)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n24 / 8 = 3 (left: 3 8)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n8 + 24 = 32 (left: 32)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n24 - 8 = 16 (left: 16)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\nInput: 3 9 27\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\nPossible next steps:\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n3 * 3 = 9 (left: 9 27)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n9 * 3 = 27 (left: 3 27)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n27 / 3 = 9 (left: 9 9)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n9 + 3 = 12 (left: 12 27)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n27 - 9 = 18 (left: 3 18)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n9 - 3 = 6 (left: 6 9)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n27 / 9 = 3 (left: 3 3)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n27 - 3 = 24 (left: 3 24)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n8 * 3 = 24 (left: 24)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n24 / 8 = 3 (left: 3 8)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n8 / 3 = 2.67 (left: 2.67 8)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n24 - 8 = 16 (left: 16)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n24 / 3 = 8 (left: 8 8)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n8 * 3 = 24 (left: 8 24)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)\n2.67 + 8 = 10.67 (left: 10.67)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)\n8 / 2.67 = 2.99 (left: 2.99 8)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)\n2.67 * 8 = 21.36 (left: 21.36)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)\n8 - 2.67 = 5.33 (left: 5.33 8)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)\nInput: 3 9\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)\nPossible next steps:\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)\n3 + 9 = 12 (left: 12)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)\n9 / 3 = 3 (left: 3 9)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)\n3 * 9 = 27 (left: 27)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)\n9 - 3 = 6 (left: 6 9)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.003,
                    0,
                    0,
                    0,
                    0,
                    60.0,
                    60.0,
                    60.0,
                    0,
                    0,
                    0,
                    0.003,
                    20.001,
                    20.002,
                    1.002,
                    0,
                    0.003,
                    0.003,
                    0,
                    0,
                    60.0,
                    60.0,
                    2.001,
                    0,
                    0,
                    21.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.003,
                    0,
                    0,
                    0,
                    0.003
                ],
                "select_new_ys": [
                    "3 - 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * (1 + 1)) * 8 = 24\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n8 * 3 = 24 (left: 24)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n24 / 8 = 3 (left: 3 8)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n8 * 3 = 24 (left: 24)\n",
                    "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n24 / 8 = 3 (left: 3 8)\n"
                ]
            }
        ],
        "idx": 2,
        "ys": [
            "3 - 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * (1 + 1)) * 8 = 24\n",
            "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n8 * 3 = 24 (left: 24)\n",
            "1 * 1 = 1 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n24 / 8 = 3 (left: 3 8)\n",
            "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n8 * 3 = 24 (left: 24)\n",
            "1 * 1 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n24 / 8 = 3 (left: 3 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 11682,
            "prompt_tokens": 66460,
            "cost": 0.123054
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 1 1 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 1 = 2 (left: 1 2 8)\n",
                    "1 / 1 = 1 (left: 1 1 8)\n",
                    "8 - 1 = 7 (left: 1 1 7)\n",
                    "1 * 1 = 1 (left: 1 1 8)\n",
                    "8 - 1 = 7 (left: 1 1 7)\n",
                    "1 / 1 = 1 (left: 1 1 8)\n",
                    "1 + 1 = 2 (left: 2 1 8)\n",
                    "8 - 1 = 7 (left: 1 1 7)\n"
                ],
                "values": [
                    60.0,
                    1.002,
                    1.002,
                    1.002,
                    0,
                    0,
                    41.0,
                    0
                ],
                "select_new_ys": [
                    "1 + 1 = 2 (left: 1 2 8)\n",
                    "1 + 1 = 2 (left: 2 1 8)\n",
                    "1 / 1 = 1 (left: 1 1 8)\n",
                    "8 - 1 = 7 (left: 1 1 7)\n",
                    "1 * 1 = 1 (left: 1 1 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 1 1 8",
                "ys": [
                    "1 + 1 = 2 (left: 1 2 8)\n",
                    "1 + 1 = 2 (left: 2 1 8)\n",
                    "1 / 1 = 1 (left: 1 1 8)\n",
                    "8 - 1 = 7 (left: 1 1 7)\n",
                    "1 * 1 = 1 (left: 1 1 8)\n"
                ],
                "new_ys": [
                    "1 + 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n2 * 1 = 2 (left: 2 8)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n1 * 2 = 2 (left: 2 8)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n2 + 1 = 3 (left: 3 8)\n",
                    "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n",
                    "1 + 1 = 2 (left: 2 1 8)\n2 * 1 = 2 (left: 2 8)\n",
                    "1 + 1 = 2 (left: 2 1 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "1 + 1 = 2 (left: 2 1 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "1 + 1 = 2 (left: 2 1 8)\n1 + 8 = 9 (left: 2 9)\n",
                    "1 + 1 = 2 (left: 2 1 8)\n1 * 8 = 8 (left: 8)\n",
                    "1 / 1 = 1 (left: 1 1 8)\n1 + 1 = 2 (left: 2 8)\n",
                    "1 / 1 = 1 (left: 1 1 8)\n1 * 1 = 1 (left: 1 8)\n",
                    "1 / 1 = 1 (left: 1 1 8)\n8 - 1 = 7 (left: 1 7)\n",
                    "1 / 1 = 1 (left: 1 1 8)\n8 / 1 = 8 (left: 1 8)\n",
                    "8 - 1 = 7 (left: 1 1 7)\n1 + 1 = 2 (left: 2 7)\n",
                    "8 - 1 = 7 (left: 1 1 7)\n1 * 1 = 1 (left: 1 7)\n",
                    "8 - 1 = 7 (left: 1 1 7)\n7 - 1 = 6 (left: 1 6)\n",
                    "8 - 1 = 7 (left: 1 1 7)\n7 / 1 = 7 (left: 1 7)\n",
                    "1 * 1 = 1 (left: 1 1 8)\n1 + 1 = 2 (left: 2 8)\n",
                    "1 * 1 = 1 (left: 1 1 8)\n1 * 1 = 1 (left: 1 8)\n",
                    "1 * 1 = 1 (left: 1 1 8)\n8 - 1 = 7 (left: 1 7)\n",
                    "1 * 1 = 1 (left: 1 1 8)\n8 / 1 = 8 (left: 1 8)\n"
                ],
                "values": [
                    60.0,
                    0.002,
                    60.0,
                    41.0,
                    0.002,
                    60.0,
                    60.0,
                    0.002,
                    0.002,
                    0.003,
                    1.0,
                    0,
                    0.002,
                    60.0,
                    40.0,
                    60.0,
                    0.001,
                    40.0,
                    60.0,
                    40.0,
                    0.002,
                    60.0,
                    40.0,
                    60.0
                ],
                "select_new_ys": [
                    "1 + 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n2 + 1 = 3 (left: 3 8)\n",
                    "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n",
                    "1 / 1 = 1 (left: 1 1 8)\n1 * 1 = 1 (left: 1 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 1 1 8",
                "ys": [
                    "1 + 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n2 + 1 = 3 (left: 3 8)\n",
                    "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n",
                    "1 / 1 = 1 (left: 1 1 8)\n1 * 1 = 1 (left: 1 8)\n"
                ],
                "new_ys": [
                    "1 + 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n1 + 6 = 7 (left: 7)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n6 - 1 = 5 (left: 5)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n6 / 1 = 6 (left: 6)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n2 + 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n2 + 1 = 3 (left: 3 8)\n8 / 3 = 2.66666666667 (left: 2.66666666667)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n2 + 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n2 + 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n8 / 3 = 2.6667 (left: 2.6667)\n",
                    "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "1 / 1 = 1 (left: 1 1 8)\n1 * 1 = 1 (left: 1 8)\n1 + 8 = 9 (left: 8 9)\n",
                    "1 / 1 = 1 (left: 1 1 8)\n1 * 1 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7 8)\n",
                    "1 / 1 = 1 (left: 1 1 8)\n1 * 1 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8 8)\n",
                    "1 / 1 = 1 (left: 1 1 8)\n1 * 1 = 1 (left: 1 8)\n8 / 1 = 8 (left: 8 8)\n"
                ],
                "values": [
                    0.002,
                    0.002,
                    60.0,
                    0.002,
                    0.002,
                    0.003,
                    0.002,
                    0.003,
                    0.002,
                    0.002,
                    60.0,
                    0.002,
                    0.002,
                    0.002,
                    60.0,
                    0.002,
                    0.003,
                    20.002,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 + 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n2 + 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "1 / 1 = 1 (left: 1 1 8)\n1 * 1 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7 8)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 1 1 8",
                "ys": [
                    "1 + 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n2 + 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "1 / 1 = 1 (left: 1 1 8)\n1 * 1 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7 8)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)\n"
                ],
                "new_ys": [
                    "1 + 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 + 1) + (2 + 8) = 24\n",
                    "1 + 1 = 2 (left: 1 2 8)\n2 + 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((1 + 1) + 1) * 8 = 24\n",
                    "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 + 1 + 1) * 8 = 24\n",
                    "1 / 1 = 1 (left: 1 1 8)\n1 * 1 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7 8)\n7 + 8 = 15 (left: 15) \n",
                    "1 / 1 = 1 (left: 1 1 8)\n1 * 1 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7 8)\n7 - 8 = -1 (left: -1) \n",
                    "1 / 1 = 1 (left: 1 1 8)\n1 * 1 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7 8)\n7 * 8 = 56 (left: 56) \n",
                    "1 / 1 = 1 (left: 1 1 8)\n1 * 1 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7 8)\n7 / 8 = 0.875 (left: 0.875)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)\n6 + 8 = 14 (left: 14)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)\n6 / 2 = 3 (left: 3)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)\n6 + 14 = 20 (left: 20)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)\n6 * 8 = 48 (left: 48)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)\n6 - 8 = -2 (left: -2)\n",
                    "1 + 1 = 2 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)\n6 / 8 = 0.75 (left: 0.75)\n"
                ],
                "values": [
                    0.003,
                    60.0,
                    60.0,
                    0.002,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.002,
                    0
                ],
                "select_new_ys": [
                    "1 + 1 = 2 (left: 1 2 8)\n2 + 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((1 + 1) + 1) * 8 = 24\n",
                    "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 + 1 + 1) * 8 = 24\n",
                    "1 + 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 + 1) + (2 + 8) = 24\n",
                    "1 / 1 = 1 (left: 1 1 8)\n1 * 1 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7 8)\n7 + 8 = 15 (left: 15) \n",
                    "1 + 1 = 2 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)\n6 - 8 = -2 (left: -2)\n"
                ]
            }
        ],
        "idx": 3,
        "ys": [
            "1 + 1 = 2 (left: 1 2 8)\n2 + 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((1 + 1) + 1) * 8 = 24\n",
            "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 + 1 + 1) * 8 = 24\n",
            "1 + 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 + 1) + (2 + 8) = 24\n",
            "1 / 1 = 1 (left: 1 1 8)\n1 * 1 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7 8)\n7 + 8 = 15 (left: 15) \n",
            "1 + 1 = 2 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)\n6 - 8 = -2 (left: -2)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 13265,
            "prompt_tokens": 76890,
            "cost": 0.14186500000000002
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 6 6 6",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 6 = 12 (left: 6 6 12)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n",
                    "6 * 6 = 36 (left: 6 6 36)\n",
                    "6 / 6 = 1 (left: 1 6 6)\n"
                ],
                "values": [
                    60.0,
                    21.001,
                    60.0,
                    40.001
                ],
                "select_new_ys": [
                    "6 + 6 = 12 (left: 6 6 12)\n",
                    "6 * 6 = 36 (left: 6 6 36)\n",
                    "6 / 6 = 1 (left: 1 6 6)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 6 6 6",
                "ys": [
                    "6 + 6 = 12 (left: 6 6 12)\n",
                    "6 * 6 = 36 (left: 6 6 36)\n",
                    "6 / 6 = 1 (left: 1 6 6)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n"
                ],
                "new_ys": [
                    "6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n",
                    "6 + 6 = 12 (left: 6 6 12)\n6 / 6 = 1 (left: 1 12)\n",
                    "6 + 6 = 12 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)\n",
                    "6 + 6 = 12 (left: 6 6 12)\n6 * 6 = 36 (left: 12 36)\n",
                    "6 + 6 = 12 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n",
                    "6 + 6 = 12 (left: 6 6 12)\n12 - 6 = 6 (left: 6 6)\n",
                    "6 + 6 = 12 (left: 6 6 12)\nInput: 1 12 18 36 0 6\n",
                    "6 * 6 = 36 (left: 6 6 36)\n6 * 6 = 36 (left: 36 36)\n",
                    "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n",
                    "6 * 6 = 36 (left: 6 6 36)\n36 / 6 = 6 (left: 6 6)\n",
                    "6 * 6 = 36 (left: 6 6 36)\n6 * 6 = 36 (left: 6 36)\n",
                    "6 * 6 = 36 (left: 6 6 36)\n6 + 6 = 12 (left: 12 36)\n",
                    "6 * 6 = 36 (left: 6 6 36)\n36 / 6 = 6 (left: 6 6)\n",
                    "6 * 6 = 36 (left: 6 6 36)\n6 * 6 = 36 (left: 6 36)\n",
                    "6 / 6 = 1 (left: 1 6 6)\n1 + 6 = 7 (left: 6 7)\n",
                    "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n",
                    "6 / 6 = 1 (left: 1 6 6)\n6 - 1 = 5 (left: 5 6)\n",
                    "6 / 6 = 1 (left: 1 6 6)\n1 * 6 = 6 (left: 6 6)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n6 - 0 = 6 (left: 6 6)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n6 / 0 is undefined\n",
                    "6 - 6 = 0 (left: 0 6 6)\n6 * 0 = 0 (left: 0 6)\n",
                    "6 - 6 = 0 (left: 0 6 6)\nInput: 3 5 9\n",
                    "6 - 6 = 0 (left: 0 6 6)\nPossible next steps:\n",
                    "6 - 6 = 0 (left: 0 6 6)\n3 + 5 = 8 (left: 8 9)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n5 * 3 = 15 (left: 9 15)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n9 - 3 = 6 (left: 6 9)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n9 / 3 = 3 (left: 3 9)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n3 * 5 = 15 (left: 9 15)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n5 - 3 = 2 (left: 2 9)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n9 - 5 = 4 (left: 3 4)\n",
                    "6 - 6 = 0 (left: 0 6 6)\nInput: 4 4 9\n",
                    "6 - 6 = 0 (left: 0 6 6)\nPossible next steps:\n",
                    "6 - 6 = 0 (left: 0 6 6)\n4 + 4 = 8 (left: 8 9)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n4 * 4 = 16 (left: 9 16)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n9 - 4 = 5 (left: 4 5)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n9 / 4 = 2.25 (left: 2.25 4)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n4 - 4 = 0 (left: 0 9)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n9 * 4 = 36 (left: 4 36)\n",
                    "6 - 6 = 0 (left: 0 6 6)\nInput: 1 2 3\n",
                    "6 - 6 = 0 (left: 0 6 6)\nPossible next steps:\n",
                    "6 - 6 = 0 (left: 0 6 6)\n1 + 2 = 3 (left: 3 3)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n2 * 3 = 6 (left: 6 3)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n3 - 1 = 2 (left: 2 3)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n3 / 1 = 3 (left: 3 3)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n1 * 2 = 2 (left: 2 3)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n2 - 1 = 1 (left: 1 3)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n3 - 2 = 1 (left: 1 1)\n"
                ],
                "values": [
                    20.002,
                    22.0,
                    0.003,
                    0.003,
                    60.0,
                    0.003,
                    0.003,
                    20.002,
                    40.001,
                    0.003,
                    0.003,
                    0.003,
                    0,
                    0,
                    0.003,
                    0.003,
                    1.0,
                    0.003,
                    0.003,
                    0.003,
                    0.003,
                    40.001,
                    0.003,
                    0.003,
                    0.003,
                    21.001,
                    0.003,
                    0,
                    21.001,
                    1.0,
                    22.0,
                    0.003,
                    0,
                    0.003,
                    0.003,
                    3.0,
                    2.0,
                    40.0,
                    20.002,
                    0.003,
                    0,
                    0,
                    0.0,
                    0.002,
                    0,
                    0.002,
                    60.0,
                    0.002
                ],
                "select_new_ys": [
                    "6 + 6 = 12 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n2 - 1 = 1 (left: 1 3)\n",
                    "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n6 * 0 = 0 (left: 0 6)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n4 - 4 = 0 (left: 0 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 6 6 6",
                "ys": [
                    "6 + 6 = 12 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n2 - 1 = 1 (left: 1 3)\n",
                    "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n6 * 0 = 0 (left: 0 6)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n4 - 4 = 0 (left: 0 9)\n"
                ],
                "new_ys": [
                    "6 + 6 = 12 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n0 + 12 = 12\n",
                    "6 - 6 = 0 (left: 0 6 6)\n2 - 1 = 1 (left: 1 3)\n1 + 3 = 4 (left: 4)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n2 - 1 = 1 (left: 1 3)\n3 - 1 = 2 (left: 2)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n2 - 1 = 1 (left: 1 3)\n1 * 3 = 3 (left: 3)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n2 - 1 = 1 (left: 1 3)\n3 / 1 = 3 (left: 3)\n",
                    "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 + 36 = 37 (left: 37)\n",
                    "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 / 1 = 36 (left: 36)\n",
                    "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)\n",
                    "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 - 1 = 35 (left: 35)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n6 * 0 = 0 (left: 0 6)\n0 + 6 = 6\n",
                    "6 - 6 = 0 (left: 0 6 6)\n4 - 4 = 0 (left: 0 9)\n0 + 9 = 9 (left: 9)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n4 - 4 = 0 (left: 0 9)\n9 - 0 = 9 (left: 9)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n4 - 4 = 0 (left: 0 9)\n9 / 0 = undefined (cannot divide by 0)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n4 - 4 = 0 (left: 0 9)\n9 * 0 = 0 (left: 0)\n"
                ],
                "values": [
                    0.003,
                    0,
                    0,
                    0,
                    0,
                    0.003,
                    0,
                    0,
                    0.003,
                    0.003,
                    0.002,
                    0.002,
                    0.003,
                    0.003
                ],
                "select_new_ys": [
                    "6 + 6 = 12 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n0 + 12 = 12\n",
                    "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 + 36 = 37 (left: 37)\n",
                    "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 - 1 = 35 (left: 35)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n6 * 0 = 0 (left: 0 6)\n0 + 6 = 6\n",
                    "6 - 6 = 0 (left: 0 6 6)\n4 - 4 = 0 (left: 0 9)\n9 / 0 = undefined (cannot divide by 0)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 6 6 6",
                "ys": [
                    "6 + 6 = 12 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n0 + 12 = 12\n",
                    "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 + 36 = 37 (left: 37)\n",
                    "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 - 1 = 35 (left: 35)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n6 * 0 = 0 (left: 0 6)\n0 + 6 = 6\n",
                    "6 - 6 = 0 (left: 0 6 6)\n4 - 4 = 0 (left: 0 9)\n9 / 0 = undefined (cannot divide by 0)\n"
                ],
                "new_ys": [
                    "6 + 6 = 12 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n0 + 12 = 12\n0 + 12 = 12 (left: 12)\n",
                    "6 + 6 = 12 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n0 + 12 = 12\n12 / 12 = 1 (left: 1)\n",
                    "6 + 6 = 12 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n0 + 12 = 12\n12 - 0 = 12 (left: 12)\n",
                    "6 + 6 = 12 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n0 + 12 = 12\n12 * 0 = 0 (left: 0)\n",
                    "6 + 6 = 12 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n0 + 12 = 12\n12 + 0 = 12 (left: 12)\n",
                    "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 + 36 = 37 (left: 37)\n37 + 8 = 45 (left: 8)\n",
                    "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 + 36 = 37 (left: 37)\n37 / 2 = 18.5 (left: 8)\n",
                    "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 + 36 = 37 (left: 37)\n37 - 2 = 35 (left: 2)\n",
                    "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 + 36 = 37 (left: 37)\n37 * 8 = 296 (left: 8)\n",
                    "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 + 36 = 37 (left: 37)\n37 - 8 = 29 (left: 8)\n",
                    "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 + 36 = 37 (left: 37)\n37 / 8 = 4.625 (left: 8)\n",
                    "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 - 1 = 35 (left: 35)\nThere is only one number, so there are no possible next steps.\n",
                    "6 - 6 = 0 (left: 0 6 6)\n6 * 0 = 0 (left: 0 6)\n0 + 6 = 6\n6 + 2 = 8 (left: 2 8)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n6 * 0 = 0 (left: 0 6)\n0 + 6 = 6\n6 * 2 = 12 (left: 12)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n6 * 0 = 0 (left: 0 6)\n0 + 6 = 6\n6 - 2 = 4 (left: 4)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n6 * 0 = 0 (left: 0 6)\n0 + 6 = 6\n6 / 2 = 3 (left: 3)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n4 - 4 = 0 (left: 0 9)\n9 / 0 = undefined (cannot divide by 0)\n9 + 0 = 9\n",
                    "6 - 6 = 0 (left: 0 6 6)\n4 - 4 = 0 (left: 0 9)\n9 / 0 = undefined (cannot divide by 0)\n9 - 0 = 9\n",
                    "6 - 6 = 0 (left: 0 6 6)\n4 - 4 = 0 (left: 0 9)\n9 / 0 = undefined (cannot divide by 0)\n9 * 0 = 0\n"
                ],
                "values": [
                    0,
                    0.003,
                    0,
                    0.003,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.002,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "6 + 6 = 12 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n0 + 12 = 12\n12 / 12 = 1 (left: 1)\n",
                    "6 + 6 = 12 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n0 + 12 = 12\n12 * 0 = 0 (left: 0)\n",
                    "6 - 6 = 0 (left: 0 6 6)\n6 * 0 = 0 (left: 0 6)\n0 + 6 = 6\n6 + 2 = 8 (left: 2 8)\n",
                    "6 + 6 = 12 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n0 + 12 = 12\n0 + 12 = 12 (left: 12)\n",
                    "6 + 6 = 12 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n0 + 12 = 12\n12 - 0 = 12 (left: 12)\n"
                ]
            }
        ],
        "idx": 4,
        "ys": [
            "6 + 6 = 12 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n0 + 12 = 12\n12 / 12 = 1 (left: 1)\n",
            "6 + 6 = 12 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n0 + 12 = 12\n12 * 0 = 0 (left: 0)\n",
            "6 - 6 = 0 (left: 0 6 6)\n6 * 0 = 0 (left: 0 6)\n0 + 6 = 6\n6 + 2 = 8 (left: 2 8)\n",
            "6 + 6 = 12 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n0 + 12 = 12\n0 + 12 = 12 (left: 12)\n",
            "6 + 6 = 12 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n0 + 12 = 12\n12 - 0 = 12 (left: 12)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 15876,
            "prompt_tokens": 92845,
            "cost": 0.1710195
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 1 2 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 1 = 2 (left: 2 2 12)\n",
                    "2 * 1 = 2 (left: 2 2 12)\n",
                    "12 - 2 = 10 (left: 2 2 10)\n",
                    "2 * 2 = 4 (left: 4 12)\n",
                    "12 / 2 = 6 (left: 4 6)\n",
                    "12 - 2 = 10 (left: 10 2)\n",
                    "2 + 1 = 3 (left: 3 2 12)\n",
                    "1 * 1 = 1 (left: 2 12)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n",
                    "12 - 1 = 11 (left: 1 2 11)\n",
                    "12 / 2 = 6 (left: 1 2 6)\n",
                    "12 - 2 = 10 (left: 2 10)\n",
                    "Input: 3 4 6 10\n",
                    "Possible next steps:\n"
                ],
                "values": [
                    20.002,
                    20.002,
                    0.003,
                    0.003,
                    41.0,
                    1.001,
                    0.003,
                    60.0,
                    20.002,
                    0.003,
                    2.001,
                    0.0,
                    0.003,
                    0.003
                ],
                "select_new_ys": [
                    "1 * 1 = 1 (left: 2 12)\n",
                    "12 / 2 = 6 (left: 4 6)\n",
                    "1 + 1 = 2 (left: 2 2 12)\n",
                    "2 * 1 = 2 (left: 2 2 12)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 1 2 12",
                "ys": [
                    "1 * 1 = 1 (left: 2 12)\n",
                    "12 / 2 = 6 (left: 4 6)\n",
                    "1 + 1 = 2 (left: 2 2 12)\n",
                    "2 * 1 = 2 (left: 2 2 12)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n"
                ],
                "new_ys": [
                    "1 * 1 = 1 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "1 * 1 = 1 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "1 * 1 = 1 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "12 / 2 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "12 / 2 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "12 / 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "12 / 2 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "12 / 2 = 6 (left: 4 6)\nInput: 10 12 14\n",
                    "12 / 2 = 6 (left: 4 6)\nPossible next steps:\n",
                    "12 / 2 = 6 (left: 4 6)\n10 + 12 = 22 (left: 22 14)\n",
                    "12 / 2 = 6 (left: 4 6)\n12 - 10 = 2 (left: 2 14)\n",
                    "12 / 2 = 6 (left: 4 6)\n10 * 12 = 120 (left: 120 14)\n",
                    "12 / 2 = 6 (left: 4 6)\n12 / 10 = 1.2 (left: 1.2 14)\n",
                    "12 / 2 = 6 (left: 4 6)\n14 - 10 = 4 (left: 4 14)\n",
                    "12 / 2 = 6 (left: 4 6)\n10 / 12 = 0.833333333 (left: 0.833333333 14)\n",
                    "12 / 2 = 6 (left: 4 6)\nInput: 3 5 7\n",
                    "12 / 2 = 6 (left: 4 6)\nPossible next steps:\n",
                    "12 / 2 = 6 (left: 4 6)\n3 + 5 = 8 (left: 8 7)\n",
                    "12 / 2 = 6 (left: 4 6)\n5 - 3 = 2 (left: 2 7)\n",
                    "12 / 2 = 6 (left: 4 6)\n3 * 5 = 15 (left: 15 7)\n",
                    "12 / 2 = 6 (left: 4 6)\n5 / 3 = 1.666666667 (left: 1.666666667 7)\n",
                    "12 / 2 = 6 (left: 4 6)\n7 - 3 = 4 (left: 4 7)\n",
                    "12 / 2 = 6 (left: 4 6)\n3 / 5 = 0.6 (left: 0.6 7)\n",
                    "1 + 1 = 2 (left: 2 2 12)\n2 + 2 = 4 (left: 4 12)\n",
                    "1 + 1 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n",
                    "1 + 1 = 2 (left: 2 2 12)\n2 / 2 = 1 (left: 1 12)\n",
                    "1 + 1 = 2 (left: 2 2 12)\n12 - 2 = 10 (left: 2 10)\n",
                    "1 + 1 = 2 (left: 2 2 12)\n12 / 2 = 6 (left: 2 6)\n",
                    "2 * 1 = 2 (left: 2 2 12)\n2 + 2 = 4 (left: 4 12)\n",
                    "2 * 1 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n",
                    "2 * 1 = 2 (left: 2 2 12)\n2^2 = 4 (left: 4 12)\n",
                    "2 * 1 = 2 (left: 2 2 12)\n12 / 2 = 6 (left: 2 6)\n",
                    "2 * 1 = 2 (left: 2 2 12)\n12 - 2 = 10 (left: 2 10)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n2 + 2 = 4 (left: 4 12)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n2 / 2 = 1 (left: 1 12)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n12 - 2 = 10 (left: 2 10)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n12 / 2 = 6 (left: 2 6)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n12 - 2 = 10 (left: 2 10)\n",
                    "1 * 2 = 2 (left: 2 2 12)\nInput: 4 4 10\n",
                    "1 * 2 = 2 (left: 2 2 12)\nPossible next steps:\n",
                    "1 * 2 = 2 (left: 2 2 12)\n4 + 4 = 8 (left: 8 10)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n4 * 4 = 16 (left: 16 10)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n4 / 4 = 1 (left: 1 10)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 / 4 = 2.5 (left: 2.5 10)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n"
                ],
                "values": [
                    0,
                    0.003,
                    0.003,
                    0.003,
                    0,
                    60.0,
                    0.001,
                    0.003,
                    0.003,
                    0.003,
                    0.003,
                    0.002,
                    0.002,
                    0,
                    2.0,
                    0.003,
                    0,
                    0.003,
                    0.001,
                    0.002,
                    0.002,
                    0.003,
                    1.002,
                    0.003,
                    0.003,
                    22.0,
                    0.0,
                    0.002,
                    0.003,
                    0.003,
                    0.003,
                    0.002,
                    0.0,
                    0.003,
                    0.003,
                    22.0,
                    0.0,
                    0.002,
                    0,
                    0.003,
                    0.003,
                    22.0,
                    0.003,
                    60.0,
                    41.0,
                    0.002,
                    0
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n4 / 4 = 1 (left: 1 10)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n",
                    "1 + 1 = 2 (left: 2 2 12)\n2 / 2 = 1 (left: 1 12)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n2 / 2 = 1 (left: 1 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 1 2 12",
                "ys": [
                    "12 / 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n4 / 4 = 1 (left: 1 10)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n",
                    "1 + 1 = 2 (left: 2 2 12)\n2 / 2 = 1 (left: 1 12)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n2 / 2 = 1 (left: 1 12)\n"
                ],
                "new_ys": [
                    "12 / 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (12 / 2) = 24\n",
                    "1 * 2 = 2 (left: 2 2 12)\n4 / 4 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n4 / 4 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n4 / 4 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\nInput: 10 5 3\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\nPossible next steps:\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n10 + 5 = 15 (left: 15 3)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n10 + 3 = 13 (left: 5 13)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n10 - 5 = 5 (left: 5 3)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n10 - 3 = 7 (left: 7 3)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n10 * 5 = 50 (left: 50 3)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n10 / 5 = 2 (left: 2 3)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n10 * 3 = 30 (left: 5 30)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n10 / 3 = 3.33 (left: 3.33)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n5 + 3 = 8 (left: 10 8)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n5 - 3 = 2 (left: 10 2)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n5 * 3 = 15 (left: 15)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n5 / 3 = 1.67 (left: 1.67)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n3 * 10 = 30 (left: 30)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n3 / 10 = 0.3 (left: 0.3)\n",
                    "1 + 1 = 2 (left: 2 2 12)\n2 / 2 = 1 (left: 1 12)\n1 + 12 = 13 (left: 12)\n",
                    "1 + 1 = 2 (left: 2 2 12)\n2 / 2 = 1 (left: 1 12)\n12 / 1 = 12 (left: 12)\n",
                    "1 + 1 = 2 (left: 2 2 12)\n2 / 2 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\n",
                    "1 + 1 = 2 (left: 2 2 12)\n2 / 2 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n",
                    "1 + 1 = 2 (left: 2 2 12)\n2 / 2 = 1 (left: 1 12)\n12 - 12 = 0\n",
                    "1 * 2 = 2 (left: 2 2 12)\n2 / 2 = 1 (left: 1 12)\n1 + 12 = 13 (left: 13)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n2 / 2 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n2 / 2 = 1 (left: 1 12)\n12 / 1 = 12 (left: 12)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n2 / 2 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n"
                ],
                "values": [
                    60.0,
                    0.002,
                    0.003,
                    0.002,
                    0.003,
                    0.001,
                    60.0,
                    0,
                    0.003,
                    0.003,
                    0.003,
                    0.003,
                    20.0,
                    0.0,
                    0.002,
                    0.002,
                    0.001,
                    0.003,
                    1.002,
                    1.001,
                    0.002,
                    0.002,
                    0.003,
                    0.0,
                    0,
                    0,
                    0.002,
                    0,
                    0.003,
                    0.002,
                    0.002,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (12 / 2) = 24\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n10 - 5 = 5 (left: 5 3)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n5 + 3 = 8 (left: 10 8)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n5 - 3 = 2 (left: 10 2)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 1 2 12",
                "ys": [
                    "12 / 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (12 / 2) = 24\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n10 - 5 = 5 (left: 5 3)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n5 + 3 = 8 (left: 10 8)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n5 - 3 = 2 (left: 10 2)\n"
                ],
                "new_ys": [
                    "12 / 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (12 / 2) = 24\n4 * (12 / 2) = 4 * 6 = 24\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 * 2) * (10 - (1 + 2)) = 24\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n10 - 5 = 5 (left: 5 3)\n5 + 3 = 8 (left: 8)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n10 - 5 = 5 (left: 5 3)\n5 - 3 = 2 (left: 2)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n10 - 5 = 5 (left: 5 3)\n5 * 3 = 15 (left: 15)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n10 - 5 = 5 (left: 5 3)\n5 / 3 = 1.67 (left: 1.67)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n5 + 3 = 8 (left: 10 8)\n10 + 8 = 18 (left: 8 18)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n5 + 3 = 8 (left: 10 8)\n10 - 8 = 2 (left: 2 8)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n5 + 3 = 8 (left: 10 8)\n10 * 8 = 80 (left: 8 80)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n5 + 3 = 8 (left: 10 8)\n10 / 8 = 1.25 (left: 1.25 8)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n5 - 3 = 2 (left: 10 2)\n10 + 2 = 12 (left: 12)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n5 - 3 = 2 (left: 10 2)\n10 / 2 = 5 (left: 5)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n5 - 3 = 2 (left: 10 2)\n10 * 2 = 20 (left: 20)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n5 - 3 = 2 (left: 10 2)\n10 - 2 = 8 (left: 8)\n"
                ],
                "values": [
                    60.0,
                    0.003,
                    0,
                    0,
                    0.002,
                    0.002,
                    0,
                    0.002,
                    0,
                    0,
                    0,
                    0.002,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (12 / 2) = 24\n4 * (12 / 2) = 4 * 6 = 24\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 * 2) * (10 - (1 + 2)) = 24\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n10 - 5 = 5 (left: 5 3)\n5 * 3 = 15 (left: 15)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n10 - 5 = 5 (left: 5 3)\n5 / 3 = 1.67 (left: 1.67)\n",
                    "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n5 + 3 = 8 (left: 10 8)\n10 - 8 = 2 (left: 2 8)\n"
                ]
            }
        ],
        "idx": 5,
        "ys": [
            "12 / 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (12 / 2) = 24\n4 * (12 / 2) = 4 * 6 = 24\n",
            "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 * 2) * (10 - (1 + 2)) = 24\n",
            "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n10 - 5 = 5 (left: 5 3)\n5 * 3 = 15 (left: 15)\n",
            "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n10 - 5 = 5 (left: 5 3)\n5 / 3 = 1.67 (left: 1.67)\n",
            "1 * 2 = 2 (left: 2 2 12)\n10 - 4 = 6 (left: 4 6)\n5 + 3 = 8 (left: 10 8)\n10 - 8 = 2 (left: 2 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 19216,
            "prompt_tokens": 110531,
            "cost": 0.2042285
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 2 6",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 2 = 3 (left: 2 3 6)\n",
                    "2 * 2 = 4 (left: 4 2 6)\n",
                    "6 / 2 = 3 (left: 2 3 6)\n",
                    "2 + 2 = 4 (left: 4 6)\n",
                    "2 * 2 = 4 (left: 4 4 6)\n",
                    "6 - 2 = 4 (left: 2 4 6)\n",
                    "6 - 2 = 4 (left: 2 4 6)\n",
                    "2 * 2 = 4 (left: 4 6)\n",
                    "Input: 3 5 5 10\n",
                    "Possible next steps:\n",
                    "3 + 5 = 8 (left: 5 8 10)\n",
                    "5 * 5 = 25 (left: 25 3 10)\n",
                    "10 - 3 = 7 (left: 5 7 10)\n",
                    "5 + 5 = 10 (left: 3 10)\n",
                    "5 * 5 = 25 (left: 25 10)\n",
                    "10 - 3 = 7 (left: 3 7 10)\n",
                    "5 + 5 = 10 (left: 10)\n",
                    "5 * 5 = 25 (left: 25)\n",
                    "Input: 4 6 6 10\n",
                    "Possible next steps:\n",
                    "4 + 6 = 10 (left: 6 10)\n",
                    "6 * 6 = 36 (left: 36 4 10)\n",
                    "10 - 4 = 6 (left: 6 6 10)\n",
                    "6 * 6 = 36 (left: 36 10)\n",
                    "10 - 4 = 6 (left: 6 6 10)\n",
                    "6 * 6 = 36 (left: 36 10)\n",
                    "10 - 4 = 6 (left: 6 6 10)\n",
                    "6 * 6 = 36 (left: 36 10)\n",
                    "Input: 1 3 3 6\n",
                    "Possible next steps:\n",
                    "1 + 3 = 4 (left: 3 4 6)\n",
                    "3 * 3 = 9 (left: 9 1 6)\n",
                    "6 - 1 = 5 (left: 3 5 6)\n",
                    "3 + 3 = 6 (left: 6)\n",
                    "3 * 3 = 9 (left: 9)\n",
                    "6 - 1 = 5 (left: 3 5)\n",
                    "3 + 3 = 6 (left: 6)\n",
                    "3 * 3 = 9 (left: 9)\n"
                ],
                "values": [
                    21.0,
                    0.003,
                    21.0,
                    41.0,
                    3.0,
                    0.003,
                    0,
                    41.0,
                    0.003,
                    0.003,
                    22.0,
                    2.001,
                    2.0,
                    0.003,
                    0.003,
                    1.002,
                    0.003,
                    0.001,
                    0.003,
                    0,
                    0.001,
                    1.001,
                    60.0,
                    0.002,
                    0,
                    0,
                    0,
                    0,
                    0.003,
                    0,
                    3.0,
                    1.002,
                    0.003,
                    0.003,
                    0.002,
                    0.003,
                    0,
                    0
                ],
                "select_new_ys": [
                    "10 - 4 = 6 (left: 6 6 10)\n",
                    "2 + 2 = 4 (left: 4 6)\n",
                    "2 * 2 = 4 (left: 4 6)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n",
                    "1 + 2 = 3 (left: 2 3 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 2 6",
                "ys": [
                    "10 - 4 = 6 (left: 6 6 10)\n",
                    "2 + 2 = 4 (left: 4 6)\n",
                    "2 * 2 = 4 (left: 4 6)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n",
                    "1 + 2 = 3 (left: 2 3 6)\n"
                ],
                "new_ys": [
                    "10 - 4 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n",
                    "10 - 4 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n",
                    "10 - 4 = 6 (left: 6 6 10)\n6 - 6 = 0 (left: 0 10)\n",
                    "10 - 4 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n",
                    "10 - 4 = 6 (left: 6 6 10)\n10 * 6 = 60 (left: 6 60)\n",
                    "10 - 4 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 10)\n",
                    "2 + 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "2 + 2 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "2 + 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 + 2 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "2 * 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "2 * 2 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 * 2 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n5 + 8 = 13 (left: 10 13)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n8 - 5 = 3 (left: 3 10)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n10 - 5 = 5 (left: 5 10)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n5 * 8 = 40 (left: 10 40)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n8 / 5 = 1.6 (left: 1.6 10)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n10 + 5 = 15 (left: 8 15)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n5 - 8 = -3 (left: -3 10)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n10 - 8 = 2 (left: 2 10)\n",
                    "3 + 5 = 8 (left: 5 8 10)\nInput: 3 6 9 12\n",
                    "3 + 5 = 8 (left: 5 8 10)\nPossible next steps:\n",
                    "3 + 5 = 8 (left: 5 8 10)\n3 + 6 = 9 (left: 9 9 12)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n6 / 3 = 2 (left: 2 9 12)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n9 + 3 = 12 (left: 6 12 12)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n3 * 6 = 18 (left: 9 18 12)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n6 - 3 = 3 (left: 3 9 12)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 9 = 3 (left: 3 6 12)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 / 3 = 4 (left: 6 9 4)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n",
                    "1 + 2 = 3 (left: 2 3 6)\n2 + 3 = 5 (left: 5 6)\n",
                    "1 + 2 = 3 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)\n",
                    "1 + 2 = 3 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)\n",
                    "1 + 2 = 3 (left: 2 3 6)\n6 / 2 = 3 (left: 3 6)\n"
                ],
                "values": [
                    0.003,
                    0.003,
                    20.0,
                    0.003,
                    0.003,
                    40.0,
                    0.003,
                    0,
                    60.0,
                    0.001,
                    0.003,
                    0,
                    60.0,
                    0.001,
                    0.002,
                    0.003,
                    0.001,
                    1.002,
                    0.0,
                    1.002,
                    1.001,
                    0.0,
                    0.003,
                    0.003,
                    2.001,
                    0.003,
                    3.0,
                    3.0,
                    0.002,
                    1.002,
                    22.0,
                    40.001,
                    1.0,
                    0.003,
                    41.0,
                    3.0
                ],
                "select_new_ys": [
                    "2 + 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "1 + 2 = 3 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n",
                    "10 - 4 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 2 6",
                "ys": [
                    "2 + 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "1 + 2 = 3 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n",
                    "10 - 4 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 10)\n"
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 2) * (2 + 6) = 24\n",
                    "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + (2 * 2)) * 6 = 24\n",
                    "1 + 2 = 3 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "1 + 2 = 3 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "1 + 2 = 3 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "1 + 2 = 3 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 6 3 9)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n",
                    "10 - 4 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\n",
                    "10 - 4 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 10)\n10 - 4 = 6 (left: 6)\n",
                    "10 - 4 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 10)\n4 * 10 = 40 (left: 40)\n",
                    "10 - 4 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 10)\n10 / 4 = 2.5 (left: 2.5)\n"
                ],
                "values": [
                    60.0,
                    60.0,
                    0.003,
                    0.001,
                    60.0,
                    0,
                    0.003,
                    1.002,
                    1.002,
                    0,
                    0,
                    0.003,
                    0.003,
                    0.001
                ],
                "select_new_ys": [
                    "2 + 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 2) * (2 + 6) = 24\n",
                    "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + (2 * 2)) * 6 = 24\n",
                    "1 + 2 = 3 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 6 3 9)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 2 2 6",
                "ys": [
                    "2 + 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 2) * (2 + 6) = 24\n",
                    "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + (2 * 2)) * 6 = 24\n",
                    "1 + 2 = 3 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 6 3 9)\n"
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 2) * (2 + 6) = 24\n1 + 2 = 3 (left: 3)\n",
                    "2 + 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 2) * (2 + 6) = 24\n1 / 2 = 0.5 (left: 0.5)\n",
                    "2 + 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 2) * (2 + 6) = 24\n2 - 1 = 1 (left: 1)\n",
                    "2 + 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 2) * (2 + 6) = 24\n2 * 1 = 2 (left: 2)\n",
                    "2 + 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 2) * (2 + 6) = 24\nAnswer: 3\n",
                    "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + (2 * 2)) * 6 = 24\n1 + 2 = 3 (left: 3 * 2\n",
                    "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + (2 * 2)) * 6 = 24\n2 * 2 = 4 (left: 1 + 4\n",
                    "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + (2 * 2)) * 6 = 24\n1 + 4 = 5 (left: 5 *\n",
                    "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + (2 * 2)) * 6 = 24\nAnswer: 5 *\n",
                    "1 + 2 = 3 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 2) * (2 + 6) = 24\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n3 + 9 = 12 (left: 9 12)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 * 3 = 27 (left: 9 27)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 - 3 = 6 (left: 6 9)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\nInput: 5 10 10\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\nPossible next steps:\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n5 + 10 = 15 (left: 10 15)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n10 / 5 = 2 (left: 2 10)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n10 * 5 = 50 (left: 10 50)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n10 - 5 = 5 (left: 5 10)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 6 3 9)\n6 + 3 = 9 (left: 9 9)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 6 3 9)\n6 * 3 = 18 (left: 18 9)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 6 3 9)\n6 / 3 = 2 (left: 2 9)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 6 3 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 6 3 9)\n9 / 3 = 3 (left: 3 3)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 6 3 9)\nInput: 5 5 5\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 6 3 9)\nPossible next steps:\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 6 3 9)\n5 + 5 = 10 (left: 5 10)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 6 3 9)\n5 * 5 = 25 (left: 25 5)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 6 3 9)\n5 / 5 = 1 (left: 1 5)\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 6 3 9)\n5 - 5 = 0 (left: 0 5)\n"
                ],
                "values": [
                    0,
                    0.0,
                    0.003,
                    0,
                    0.003,
                    60.0,
                    40.001,
                    0.0,
                    0.003,
                    60.0,
                    0,
                    0,
                    20.001,
                    0.003,
                    0,
                    0.003,
                    0,
                    0.0,
                    0,
                    0.001,
                    1.002,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0.003,
                    0.001,
                    0,
                    60.0,
                    0
                ],
                "select_new_ys": [
                    "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + (2 * 2)) * 6 = 24\n1 + 2 = 3 (left: 3 * 2\n",
                    "1 + 2 = 3 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 2) * (2 + 6) = 24\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 6 3 9)\n5 / 5 = 1 (left: 1 5)\n",
                    "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + (2 * 2)) * 6 = 24\n2 * 2 = 4 (left: 1 + 4\n",
                    "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 * 3 = 27 (left: 9 27)\n"
                ]
            }
        ],
        "idx": 6,
        "ys": [
            "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + (2 * 2)) * 6 = 24\n1 + 2 = 3 (left: 3 * 2\n",
            "1 + 2 = 3 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 2) * (2 + 6) = 24\n",
            "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 6 3 9)\n5 / 5 = 1 (left: 1 5)\n",
            "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + (2 * 2)) * 6 = 24\n2 * 2 = 4 (left: 1 + 4\n",
            "3 + 5 = 8 (left: 5 8 10)\n12 - 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 * 3 = 27 (left: 9 27)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 25113,
            "prompt_tokens": 135402,
            "cost": 0.25332899999999997
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 1 10 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 1 = 2 (left: 2 10 12)\n",
                    "1 * 1 = 1 (left: 1 10 12)\n",
                    "10 + 1 = 11 (left: 1 11 12)\n",
                    "1 + 10 = 11 (left: 11 10 12)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n",
                    "12 - 1 = 11 (left: 1 10 11)\n"
                ],
                "values": [
                    0.003,
                    0.003,
                    1.002,
                    1.002,
                    2.001,
                    40.001,
                    0.003
                ],
                "select_new_ys": [
                    "12 - 10 = 2 (left: 1 2 12)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n",
                    "10 + 1 = 11 (left: 1 11 12)\n",
                    "1 + 10 = 11 (left: 11 10 12)\n",
                    "1 + 1 = 2 (left: 2 10 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 1 10 12",
                "ys": [
                    "12 - 10 = 2 (left: 1 2 12)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n",
                    "10 + 1 = 11 (left: 1 11 12)\n",
                    "1 + 10 = 11 (left: 11 10 12)\n",
                    "1 + 1 = 2 (left: 2 10 12)\n"
                ],
                "new_ys": [
                    "12 - 10 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n2 + 12 = 14 (left: 1 14)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 - 1 = 11 (left: 2 11)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n1 * 12 = 12 (left: 12)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n1 + 9 = 10 (left: 10 12)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n9 * 1 = 9 (left: 9 12)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 1 = 11 (left: 9 11)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n9 + 1 = 10 (left: 10 12)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 / 1 = 12 (left: 9 12)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n1 * 9 = 9 (left: 9 12)\n",
                    "10 - 1 = 9 (left: 1 9 12)\nInput: 3 5 6 7\n",
                    "10 - 1 = 9 (left: 1 9 12)\nPossible next steps:\n",
                    "10 - 1 = 9 (left: 1 9 12)\n3 + 5 = 8 (left: 6 7 8)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n5 + 7 = 12 (left: 3 6 12)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n6 * 3 = 18 (left: 7 12 18)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n7 - 3 = 4 (left: 4 5 6)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n5 * 6 = 30 (left: 7 30)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n7 - 5 = 2 (left: 2 6 7)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n6 + 7 = 13 (left: 3 13)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n7 * 3 = 21 (left: 5 6 21)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n3 * 5 = 15 (left: 6 7 15)\n",
                    "10 + 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n",
                    "10 + 1 = 11 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)\n",
                    "10 + 1 = 11 (left: 1 11 12)\n1 * 11 = 11 (left: 11 12)\n",
                    "10 + 1 = 11 (left: 1 11 12)\n11 / 1 = 11 (left: 11 12)\n",
                    "1 + 10 = 11 (left: 11 10 12)\n11 - 10 = 1 (left: 1 10 12)\n",
                    "1 + 10 = 11 (left: 11 10 12)\n11 / 10 = 1.1 (left: 1.1 10 12)\n",
                    "1 + 10 = 11 (left: 11 10 12)\n10 + 12 = 22 (left: 11 22)\n",
                    "1 + 10 = 11 (left: 11 10 12)\n11 * 10 = 110 (left: 110 12)\n",
                    "1 + 10 = 11 (left: 11 10 12)\n12 - 10 = 2 (left: 11 2)\n",
                    "1 + 10 = 11 (left: 11 10 12)\n\n",
                    "1 + 10 = 11 (left: 11 10 12)\nInput: 3 5 7 9\n",
                    "1 + 10 = 11 (left: 11 10 12)\nPossible next steps:\n",
                    "1 + 10 = 11 (left: 11 10 12)\n3 + 5 = 8 (left: 7 8 9)\n",
                    "1 + 10 = 11 (left: 11 10 12)\n5 * 7 = 35 (left: 3 35 9)\n",
                    "1 + 10 = 11 (left: 11 10 12)\n7 - 5 = 2 (left: 3 2 9)\n",
                    "1 + 10 = 11 (left: 11 10 12)\n9 - 7 = 2 (left: 3 5 2)\n",
                    "1 + 10 = 11 (left: 11 10 12)\n7 / 3 = 2.33 (left: 2.33 5 9)\n",
                    "1 + 10 = 11 (left: 11 10 12)\n9 + 3 = 12 (left: 5 7 12)\n",
                    "1 + 1 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n",
                    "1 + 1 = 2 (left: 2 10 12)\n10 + 12 = 22 (left: 2 22)\n",
                    "1 + 1 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10)\n"
                ],
                "values": [
                    0.003,
                    60.0,
                    60.0,
                    60.0,
                    1.002,
                    0.001,
                    60.0,
                    0,
                    0.003,
                    0,
                    1.0,
                    0.003,
                    41.0,
                    0,
                    0,
                    0.003,
                    0.003,
                    2.0,
                    1.002,
                    0.003,
                    1.002,
                    0.003,
                    2.001,
                    0.002,
                    21.001,
                    0.003,
                    20.002,
                    0.003,
                    0.003,
                    0.003,
                    0.003,
                    2.001,
                    20.002,
                    40.001,
                    1.001,
                    1.002,
                    0.003,
                    0.003,
                    41.0,
                    2.001,
                    0.003,
                    3.0,
                    2.001,
                    41.0,
                    1.002,
                    0.003,
                    0.003
                ],
                "select_new_ys": [
                    "12 - 10 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 1 10 12",
                "ys": [
                    "12 - 10 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n"
                ],
                "new_ys": [
                    "12 - 10 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 + 24 = 25 (left: 24 25)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24 24)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n1 + 10 = 11 (left: 10)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n10 - 1 = 9 (left: 9)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n10 + 1 = 11 (left: 10)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\nInput: 5 25\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\nPossible next steps:\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n5 + 25 = 30 (left: 25)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n25 / 5 = 5 (left: 5)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n5 * 25 = 125 (left: 25)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n25 - 5 = 20 (left: 20)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n25 + 5 = 30 (left: 25)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 + 6 = 7 (left: 7)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n6 - 1 = 5 (left: 5)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n6 / 1 = 6 (left: 6)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n1 + 3 = 4 (left: 4 12)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n1 * 3 = 3 (left: 3 12)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n3 / 1 = 3 (left: 3 3)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n12 / 1 = 12 (left: 1 12)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n1 * 12 = 12 (left: 12)\n"
                ],
                "values": [
                    0.002,
                    20.0,
                    40.0,
                    0.003,
                    0.003,
                    0.003,
                    0.002,
                    0.003,
                    0.003,
                    0.003,
                    0.001,
                    0.002,
                    0.001,
                    0,
                    0.001,
                    0.002,
                    0.002,
                    0.003,
                    0.003,
                    0,
                    0.003,
                    60.0,
                    0.003,
                    0.003,
                    40.001,
                    41.0,
                    0.003,
                    0,
                    22.0,
                    0
                ],
                "select_new_ys": [
                    "12 - 10 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n12 / 1 = 12 (left: 1 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 1 10 12",
                "ys": [
                    "12 - 10 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n12 / 1 = 12 (left: 1 12)\n"
                ],
                "new_ys": [
                    "12 - 10 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / (12 - 10)) * 1 = 24\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)\n1 + 4 = 5 (left: 5)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)\n1 * 4 = 4 (left: 4)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)\n4 / 1 = 4 (left: 4)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 + 36 = 37 (left: 37)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 - 1 = 35 (left: 35)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)\n23 - 1 = 22 (left: 22)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)\n1 * 23 = 23 (left: 23)\n",
                    "12 - 10 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)\n23 / 1 = 23 (left: 23)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n12 / 1 = 12 (left: 1 12)\n1 + 12 = 13 (left: 13)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n12 / 1 = 12 (left: 1 12)\n12 / 1 = 12 (left: 12)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n12 / 1 = 12 (left: 1 12)\n12 - 1 = 11 (left: 11)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n12 / 1 = 12 (left: 1 12)\n1 * 12 = 12 (left: 12)\n"
                ],
                "values": [
                    60.0,
                    0.002,
                    0,
                    0,
                    0,
                    0.003,
                    0.003,
                    0,
                    0,
                    60.0,
                    0,
                    0,
                    0,
                    0.002,
                    0,
                    0.002,
                    0
                ],
                "select_new_ys": [
                    "12 - 10 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / (12 - 10)) * 1 = 24\n",
                    "12 - 10 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 + 36 = 37 (left: 37)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 - 1 = 35 (left: 35)\n",
                    "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)\n1 + 4 = 5 (left: 5)\n"
                ]
            }
        ],
        "idx": 7,
        "ys": [
            "12 - 10 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / (12 - 10)) * 1 = 24\n",
            "12 - 10 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)\n",
            "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 + 36 = 37 (left: 37)\n",
            "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 - 1 = 35 (left: 35)\n",
            "10 - 1 = 9 (left: 1 9 12)\n12 - 9 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)\n1 + 4 = 5 (left: 5)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 29612,
            "prompt_tokens": 151666,
            "cost": 0.286723
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 10 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 4 10 10)\n",
                    "2 * 2 = 4 (left: 4 10 10)\n",
                    "10 - 2 = 8 (left: 2 8 10)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n"
                ],
                "values": [
                    21.001,
                    21.001,
                    2.001,
                    1.002
                ],
                "select_new_ys": [
                    "2 + 2 = 4 (left: 4 10 10)\n",
                    "2 * 2 = 4 (left: 4 10 10)\n",
                    "10 - 2 = 8 (left: 2 8 10)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 10 10",
                "ys": [
                    "2 + 2 = 4 (left: 4 10 10)\n",
                    "2 * 2 = 4 (left: 4 10 10)\n",
                    "10 - 2 = 8 (left: 2 8 10)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n"
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n10 / 4 = 2.5 (left: 2.5 10)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 10)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n10 / 4 = 2.5 (left: 2.5 10)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 10)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n10 / 4 = 2.5 (left: 2.5 10)\n",
                    "2 + 2 = 4 (left: 4 10 10)\nInput: 3 9 9\n",
                    "2 + 2 = 4 (left: 4 10 10)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 4 10 10)\n3 + 9 = 12 (left: 9 12)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n9 / 3 = 3 (left: 3 9)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n9 - 3 = 6 (left: 6 9)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n9 / 3 = 3 (left: 3 9)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n9 - 3 = 6 (left: 6 9)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n9 / 3 = 3 (left: 3 9)\n",
                    "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n",
                    "2 * 2 = 4 (left: 4 10 10)\n10 / 4 = 2.5 (left: 2.5 10)\n",
                    "2 * 2 = 4 (left: 4 10 10)\n10 * 4 = 40 (left: 40 10)\n",
                    "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 10)\n",
                    "2 * 2 = 4 (left: 4 10 10)\n10 / 4 = 2.5 (left: 2.5 10)\n",
                    "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 10)\n",
                    "10 - 2 = 8 (left: 2 8 10)\n2 + 8 = 10 (left: 10 10)\n",
                    "10 - 2 = 8 (left: 2 8 10)\n8 - 2 = 6 (left: 6 10)\n",
                    "10 - 2 = 8 (left: 2 8 10)\n10 / 2 = 5 (left: 5 10)\n",
                    "10 - 2 = 8 (left: 2 8 10)\n10 - 2 = 8 (left: 8 10)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n2 + 5 = 7 (left: 7 10)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n5 * 2 = 10 (left: 10 10)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n10 - 2 = 8 (left: 8 10)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n10 / 2 = 5 (left: 5 10)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n2 * 5 = 10 (left: 10 10)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n5 + 10 = 15 (left: 2 15)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n10 - 5 = 5 (left: 2 5)\n",
                    "10 / 2 = 5 (left: 2 5 10)\nInput: 3 6 9 12\n",
                    "10 / 2 = 5 (left: 2 5 10)\nPossible next steps:\n",
                    "10 / 2 = 5 (left: 2 5 10)\n3 + 6 = 9 (left: 9 9 12)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n6 / 3 = 2 (left: 2 9 12)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n12 - 3 = 9 (left: 9 9 9)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n9 * 3 = 27 (left: 6 9 27)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n9 / 3 = 3 (left: 3 9 12)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n12 - 6 = 6 (left: 3 6 9)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n6 * 3 = 18 (left: 9 9 18)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n9 - 3 = 6 (left: 6 9 12)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n12 / 3 = 4 (left: 4 9 12)\n"
                ],
                "values": [
                    60.0,
                    0.002,
                    0.001,
                    0,
                    0,
                    0,
                    0.003,
                    0.003,
                    0,
                    0,
                    0.003,
                    0,
                    0,
                    0,
                    60.0,
                    0.002,
                    20.0,
                    0.001,
                    0,
                    0,
                    0.003,
                    0.001,
                    0.001,
                    22.0,
                    0.001,
                    0.003,
                    22.0,
                    0.001,
                    0.003,
                    0.003,
                    41.0,
                    0.003,
                    0.003,
                    2.001,
                    0.003,
                    2.001,
                    40.001,
                    0.002,
                    1.002,
                    0.003,
                    3.0,
                    60.0
                ],
                "select_new_ys": [
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n",
                    "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n12 / 3 = 4 (left: 4 9 12)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n10 - 5 = 5 (left: 2 5)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n9 * 3 = 27 (left: 6 9 27)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 2 10 10",
                "ys": [
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n",
                    "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n12 / 3 = 4 (left: 4 9 12)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n10 - 5 = 5 (left: 2 5)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n9 * 3 = 27 (left: 6 9 27)\n"
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 + 14 = 24 (left: 14 24)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 * 14 = 140 (left: 140)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4 14)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n14 / 10 = 1.4 (left: 1.4 14)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\nInput: 140 4\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n140 + 4 = 144 (left: 4 144)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n140 - 4 = 136 (left: 4 136)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n140 / 4 = 35 (left: 35 4)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n140 * 4 = 560 (left: 560)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\nInput: 4 136\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n4 + 136 = 140 (left: 140)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n136 - 4 = 132 (left: 4 132)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n136 / 4 = 34 (left: 34 4)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n136 * 4 = 544 (left: 544)\n",
                    "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 + 14 = 24 (left: 14 24)\n",
                    "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 - 14 = -4 (left: -4 14)\n",
                    "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 * 14 = 140 (left: 14 140)\n",
                    "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 / 14 = 0.7142857142857143 (left: 0.7142857142857143 14)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n12 / 3 = 4 (left: 4 9 12)\n4 + 9 = 13 (left: 13 12)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n12 / 3 = 4 (left: 4 9 12)\n9 - 4 = 5 (left: 5 12)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n12 / 3 = 4 (left: 4 9 12)\n12 - 4 = 8 (left: 9 8)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n12 / 3 = 4 (left: 4 9 12)\n4 * 9 = 36 (left: 36 12)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n12 / 3 = 4 (left: 4 9 12)\n9 / 4 = 2.25 (left: 2.25 12)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n12 / 3 = 4 (left: 4 9 12)\n12 - 9 = 3 (left: 4 3)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n12 / 3 = 4 (left: 4 9 12)\n12 / 4 = 3 (left: 3 9)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n12 / 3 = 4 (left: 4 9 12)\n9 - 4 = 5 (left: 5 12)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n10 - 5 = 5 (left: 2 5)\n2 + 5 = 7 (left: 7)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n10 - 5 = 5 (left: 2 5)\n5 - 2 = 3 (left: 3)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n10 - 5 = 5 (left: 2 5)\n2 * 5 = 10 (left: 10)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n10 - 5 = 5 (left: 2 5)\n5 / 2 = 2.5 (left: 2.5)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n9 * 3 = 27 (left: 6 9 27)\n6 * 9 = 54 (left: 27 54)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n9 * 3 = 27 (left: 6 9 27)\n9 * 3 = 27 (left: 6 27)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n9 * 3 = 27 (left: 6 9 27)\n27 / 9 = 3 (left: 3 9)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n9 * 3 = 27 (left: 6 9 27)\n9 - 6 = 3 (left: 3 27)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n9 * 3 = 27 (left: 6 9 27)\n27 - 6 = 21 (left: 9 21)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n9 * 3 = 27 (left: 6 9 27)\n9 * 3 = 27 (left: 6 27)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n9 * 3 = 27 (left: 6 9 27)\n6 + 9 = 15 (left: 15 27)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n9 * 3 = 27 (left: 6 9 27)\n27 / 9 = 3 (left: 6 3)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n9 * 3 = 27 (left: 6 9 27)\n9 * 3 = 27 (left: 6 27)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0.003,
                    0.003,
                    60.0,
                    22.0,
                    0.001,
                    0.003,
                    0.003,
                    0,
                    0,
                    60.0,
                    0.002,
                    0.003,
                    0,
                    0.0,
                    40.0,
                    0.002,
                    0.003,
                    1.002,
                    20.001,
                    41.0,
                    0.003,
                    21.0,
                    0,
                    0,
                    0.002,
                    0,
                    0.003,
                    0.001,
                    21.001,
                    20.002,
                    0,
                    20.002,
                    0.003,
                    0,
                    0.003,
                    0.0,
                    0
                ],
                "select_new_ys": [
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n140 + 4 = 144 (left: 4 144)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n136 - 4 = 132 (left: 4 132)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n12 / 3 = 4 (left: 4 9 12)\n4 * 9 = 36 (left: 36 12)\n",
                    "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 * 14 = 140 (left: 14 140)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n140 - 4 = 136 (left: 4 136)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 2 10 10",
                "ys": [
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n140 + 4 = 144 (left: 4 144)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n136 - 4 = 132 (left: 4 132)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n12 / 3 = 4 (left: 4 9 12)\n4 * 9 = 36 (left: 36 12)\n",
                    "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 * 14 = 140 (left: 14 140)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n140 - 4 = 136 (left: 4 136)\n"
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n140 + 4 = 144 (left: 4 144)\n4 * 36 = 144 (left: 36)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n140 + 4 = 144 (left: 4 144)\n144 / 4 = 36 (left: 36)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n140 + 4 = 144 (left: 4 144)\nInput: 5 30\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n140 + 4 = 144 (left: 4 144)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n140 + 4 = 144 (left: 4 144)\n5 * 6 = 30 (left: 6)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n140 + 4 = 144 (left: 4 144)\n30 / 5 = 6 (left: 6)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n136 - 4 = 132 (left: 4 132)\n4 * 132 = 528 (left: 528)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n136 - 4 = 132 (left: 4 132)\n132 / 4 = 33 (left: 33)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n136 - 4 = 132 (left: 4 132)\n132 - 4 = 128 (left: 128)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n136 - 4 = 132 (left: 4 132)\n4 + 132 = 136 (left: 136)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n12 / 3 = 4 (left: 4 9 12)\n4 * 9 = 36 (left: 36 12)\n36 / 12 = 3 (left: 3)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n12 / 3 = 4 (left: 4 9 12)\n4 * 9 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n12 / 3 = 4 (left: 4 9 12)\n4 * 9 = 36 (left: 36 12)\n36 + 12 = 48 (left: 48)\n",
                    "10 / 2 = 5 (left: 2 5 10)\n12 / 3 = 4 (left: 4 9 12)\n4 * 9 = 36 (left: 36 12)\n36 * 12 = 432 (left: 432)\n",
                    "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 * 14 = 140 (left: 14 140)\n14 + 140 = 154 (left: 154)\n",
                    "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 * 14 = 140 (left: 14 140)\n140 / 14 = 10 (left: 10)\n",
                    "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 * 14 = 140 (left: 14 140)\n140 - 14 = 126 (left: 126)\n",
                    "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 * 14 = 140 (left: 14 140)\n14 * 140 = 1960 (left: 1960)\n",
                    "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 * 14 = 140 (left: 14 140)\n140 - 14 = 126 (left: 126)\n",
                    "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 * 14 = 140 (left: 14 140)\n140 / 14 = 10 (left: 10)\n",
                    "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 * 14 = 140 (left: 14 140)\n140 - 14 = 126 (left: 126)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n140 - 4 = 136 (left: 4 136)\n4 * 136 = 544 (left: 544)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n140 - 4 = 136 (left: 4 136)\n136 / 4 = 34 (left: 34)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n140 - 4 = 136 (left: 4 136)\n136 - 4 = 132 (left: 132)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n140 - 4 = 136 (left: 4 136)\n136 / 4 = 34 (left: 34)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n140 - 4 = 136 (left: 4 136)\n136 - 4 = 132 (left: 132)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0.003,
                    0.003,
                    0.003,
                    0,
                    0,
                    0,
                    0,
                    0,
                    60.0,
                    0,
                    0,
                    0,
                    0.003,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.003,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "10 / 2 = 5 (left: 2 5 10)\n12 / 3 = 4 (left: 4 9 12)\n4 * 9 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n140 + 4 = 144 (left: 4 144)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n140 + 4 = 144 (left: 4 144)\n5 * 6 = 30 (left: 6)\n",
                    "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n140 + 4 = 144 (left: 4 144)\n30 / 5 = 6 (left: 6)\n",
                    "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 * 14 = 140 (left: 14 140)\n140 / 14 = 10 (left: 10)\n"
                ]
            }
        ],
        "idx": 8,
        "ys": [
            "10 / 2 = 5 (left: 2 5 10)\n12 / 3 = 4 (left: 4 9 12)\n4 * 9 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\n",
            "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n140 + 4 = 144 (left: 4 144)\nPossible next steps:\n",
            "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n140 + 4 = 144 (left: 4 144)\n5 * 6 = 30 (left: 6)\n",
            "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n140 + 4 = 144 (left: 4 144)\n30 / 5 = 6 (left: 6)\n",
            "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 * 14 = 140 (left: 14 140)\n140 / 14 = 10 (left: 10)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 33721,
            "prompt_tokens": 171346,
            "cost": 0.324461
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 1 1 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 1 = 2 (left: 1 2 12)\n",
                    "1 * 1 = 1 (left: 1 1 12)\n",
                    "12 - 1 = 11 (left: 1 1 11)\n",
                    "12 / 1 = 12 (left: 1 1 12)\n",
                    "1 - 1 = 0 (left: 0 1 12)\n",
                    "1 / 1 = 1 (left: 1 1 12)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n"
                ],
                "values": [
                    40.001,
                    40.001,
                    1.002,
                    40.001,
                    1.002,
                    40.001,
                    0
                ],
                "select_new_ys": [
                    "1 + 1 = 2 (left: 1 2 12)\n",
                    "1 * 1 = 1 (left: 1 1 12)\n",
                    "12 / 1 = 12 (left: 1 1 12)\n",
                    "1 / 1 = 1 (left: 1 1 12)\n",
                    "12 - 1 = 11 (left: 1 1 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 1 1 12",
                "ys": [
                    "1 + 1 = 2 (left: 1 2 12)\n",
                    "1 * 1 = 1 (left: 1 1 12)\n",
                    "12 / 1 = 12 (left: 1 1 12)\n",
                    "1 / 1 = 1 (left: 1 1 12)\n",
                    "12 - 1 = 11 (left: 1 1 11)\n"
                ],
                "new_ys": [
                    "1 + 1 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 - 1 = 11 (left: 2 11)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n",
                    "1 + 1 = 2 (left: 1 2 12)\nInput: 2 11 12\n",
                    "1 + 1 = 2 (left: 1 2 12)\nPossible next steps:\n",
                    "1 * 1 = 1 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)\n",
                    "1 * 1 = 1 (left: 1 1 12)\n1 * 1 = 1 (left: 1 12)\n",
                    "1 * 1 = 1 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)\n",
                    "1 * 1 = 1 (left: 1 1 12)\n1 * 1 = 1 (left: 1 12)\n",
                    "1 * 1 = 1 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)\n",
                    "1 * 1 = 1 (left: 1 1 12)\n1 * 1 = 1 (left: 1 12)\n",
                    "1 * 1 = 1 (left: 1 1 12)\n12 - 1 = 11 (left: 1 11)\n",
                    "1 * 1 = 1 (left: 1 1 12)\n12 / 1 = 12 (left: 1 12)\n",
                    "1 * 1 = 1 (left: 1 1 12)\n12 - 1 = 11 (left: 1 11)\n",
                    "12 / 1 = 12 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)\n",
                    "12 / 1 = 12 (left: 1 1 12)\n1 * 1 = 1 (left: 1 12)\n",
                    "12 / 1 = 12 (left: 1 1 12)\n1 / 1 = 1 (left: 1 12)\n",
                    "12 / 1 = 12 (left: 1 1 12)\n1 - 1 = 0 (left: 0 12)\n",
                    "12 / 1 = 12 (left: 1 1 12)\n12 + 1 = 13 (left: 1 13)\n",
                    "12 / 1 = 12 (left: 1 1 12)\n12 / 1 = 12 (left: 1 12)\n",
                    "12 / 1 = 12 (left: 1 1 12)\n12 - 1 = 11 (left: 1 11)\n",
                    "1 / 1 = 1 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)\n",
                    "1 / 1 = 1 (left: 1 1 12)\n1 * 1 = 1 (left: 1 12)\n",
                    "1 / 1 = 1 (left: 1 1 12)\n1 - 1 = 0 (left: 0 12)\n",
                    "1 / 1 = 1 (left: 1 1 12)\n1 / 1 = 1 (left: 1 12)\n",
                    "1 / 1 = 1 (left: 1 1 12)\n12 + 1 = 13 (left: 1 13)\n",
                    "1 / 1 = 1 (left: 1 1 12)\n12 - 1 = 11 (left: 1 11)\n",
                    "1 / 1 = 1 (left: 1 1 12)\n12 / 1 = 12 (left: 1 12)\n",
                    "12 - 1 = 11 (left: 1 1 11)\n1 + 1 = 2 (left: 2 11)\n",
                    "12 - 1 = 11 (left: 1 1 11)\n1 * 1 = 1 (left: 1 11)\n",
                    "12 - 1 = 11 (left: 1 1 11)\n11 - 1 = 10 (left: 1 10)\n",
                    "12 - 1 = 11 (left: 1 1 11)\n11 / 1 = 11 (left: 1 11)\n",
                    "12 - 1 = 11 (left: 1 1 11)\nInput: 5 5 25\n",
                    "12 - 1 = 11 (left: 1 1 11)\nPossible next steps:\n",
                    "12 - 1 = 11 (left: 1 1 11)\n5 + 5 = 10 (left: 10 25)\n",
                    "12 - 1 = 11 (left: 1 1 11)\n5 * 5 = 25 (left: 5 25)\n",
                    "12 - 1 = 11 (left: 1 1 11)\n25 / 5 = 5 (left: 5 5)\n",
                    "12 - 1 = 11 (left: 1 1 11)\n25 - 5 = 20 (left: 5 20)\n"
                ],
                "values": [
                    0.003,
                    60.0,
                    60.0,
                    60.0,
                    60.0,
                    0.001,
                    60.0,
                    0.003,
                    0.003,
                    60.0,
                    22.0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    22.0,
                    0,
                    60.0,
                    22.0,
                    22.0,
                    60.0,
                    0.003,
                    22.0,
                    1.0,
                    60.0,
                    22.0,
                    60.0,
                    22.0,
                    0.003,
                    1.0,
                    22.0,
                    0.001,
                    1.0,
                    60.0,
                    1.0,
                    0.003,
                    0.003,
                    0.003,
                    0.002,
                    0.002,
                    20.0
                ],
                "select_new_ys": [
                    "1 + 1 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 1 1 12",
                "ys": [
                    "1 + 1 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n"
                ],
                "new_ys": [
                    "1 + 1 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 + 1 = 25 (left: 25)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n1 + 10 = 11 (left: 10)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n10 - 1 = 9 (left: 9)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 + 6 = 7 (left: 7)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n6 - 1 = 5 (left: 5)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n6 / 1 = 6 (left: 6)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n"
                ],
                "values": [
                    60.0,
                    60.0,
                    0.001,
                    0,
                    0.003,
                    0.002,
                    0.003,
                    0.003,
                    0.002,
                    0.002,
                    0.003,
                    0.003,
                    60.0,
                    0.003,
                    0.003,
                    0,
                    0,
                    0.003,
                    60.0,
                    0.003
                ],
                "select_new_ys": [
                    "1 + 1 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n1 + 10 = 11 (left: 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 1 1 12",
                "ys": [
                    "1 + 1 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n1 + 10 = 11 (left: 10)\n"
                ],
                "new_ys": [
                    "1 + 1 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (1 + 1) * 12 = 24\n",
                    "1 + 1 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (1 + 1) * 12 = 24\n",
                    "1 + 1 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 1) * (1 * 12) = 24\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 1) * (1 + 12) = 24\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n1 + 10 = 11 (left: 10)\n10 + 10 = 20\n"
                ],
                "values": [
                    60.0,
                    60.0,
                    60.0,
                    60.0,
                    0
                ],
                "select_new_ys": [
                    "1 + 1 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (1 + 1) * 12 = 24\n",
                    "1 + 1 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (1 + 1) * 12 = 24\n",
                    "1 + 1 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 1) * (1 * 12) = 24\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 1) * (1 + 12) = 24\n",
                    "1 + 1 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n1 + 10 = 11 (left: 10)\n10 + 10 = 20\n"
                ]
            }
        ],
        "idx": 9,
        "ys": [
            "1 + 1 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (1 + 1) * 12 = 24\n",
            "1 + 1 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (1 + 1) * 12 = 24\n",
            "1 + 1 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 1) * (1 * 12) = 24\n",
            "1 + 1 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 1) * (1 + 12) = 24\n",
            "1 + 1 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n1 + 10 = 11 (left: 10)\n10 + 10 = 20\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 35277,
            "prompt_tokens": 179266,
            "cost": 0.339453
        }
    }
]